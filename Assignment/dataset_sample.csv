category,patent_number,title,abstract
virtualization,9374144,Method and apparatus for virtualizing antenna in wireless communication system,"The present invention relates to a wireless communication system, and more specifically, disclosed are a method and an apparatus for virtualizing an antenna. A method for communicating using a virtual antenna of a terminal in the wireless communication system, according to one embodiment of the present invention, comprises the steps of: configuring one or more virtual antennas according to an antenna 
virtualization
 pattern that is determined based on information indicating a movement status of the terminal and/or information indicating a communication status of the terminal; and communicating with the base station by using the one or more virtual antennas, wherein one or more physical antennas that are mapped to the one or more virtual antennas can be determined base on the direction of movement of the terminal."
virtualization,9363602,Method and apparatus for providing virtualized audio files via headphones,"Embodiments of the subject invention relate to a method and apparatus for providing virtualized audio files. Specific embodiments relate to a method and apparatus for providing virtualized audio files to a user via in-ear speakers or headphones. A specified embodiment can provide Surround Sound 
virtualization
 with DTS Surround Sensations software. Embodiments can utilize the 2-channel audio transmitted to the headphones. In order to accommodate for the user moving the headphones in one or more directions, and/or rotating the headphones, while still allowing the user to perceive the origin of the audio remains is a fixed location, heading data regarding the position of the headphones, the angular direction of the headphones, the movement of the headphones, and/or the rotation of the headphones can be returned from the headphones to a PC or other processing device. Additional processing of the audio files can be performed utilizing all or a portion of the received data to take into account the movement of the headphones."
virtualization,9292684,Systems and methods for security in computer systems,"Systems and methods are provided for the prevention and mitigation of security attacks in computer systems. 
Virtualization
 technology is provided and leveraged to prevent and mitigate exploits in the computer systems. For example, malicious code may be prevented from system execution by inhibiting the delivery of such code in a payload to system memory. In other examples, 
virtualization
 technology is leveraged to mask the computer system machine architecture. By masking or otherwise hiding the machine architecture, the delivery of payloads into memory by malicious users can be prevented. In this manner, even if exploits are identified and accessed by malicious users of code, the denial of payload delivery prevents the execution of malicious actions within the computer system."
virtualization,8464351,Security apparatus,"A security apparatus positioned between at least one domain having a level of trust or of sensitivity A and at least one domain having a level of trust or sensitivity B, bearing in mind that the level A is different from the level B, comprises a 
virtualization
 software layer V implemented on the physical layer H and positioned between said physical layer H and at least one set consisting of at least three different compartmentalized blocks having different sensitivity levels, BLA, BLB, MDS. The compartmentalized blocks rest on the physical layer H and the 
virtualization
 layer and the blocks include at least one of: a network block A, BLA, comprising all the network functions used to process data of security level A, a network block B, BLB, comprising all the network functions used to process data of security level B, and a security module software block, MDS, or airlock positioned between at least one block of BLA type and at least one block of BLB type, said security module being designed to monitor the exchanges of data between said blocks BLA and BLB, said security module comprising all the security, filtering or cryptographic function transformations."
virtualization,8464257,"Method and system for reducing power loss to backup IO start time of a storage device in a storage 
virtualization
 environment","A method and controller device for supplying battery power to a virtualized storage environment having a storage controller with a virtual machine manager and a second virtual machine. In response to a battery engaged event, the first virtual machine manager enables the image of the second virtual machine to be shared with a new instance of the second virtual machine so that the image does not have to be loaded therein. The first virtual machine manager then creates the new virtual machine. The old virtual machine shuts down non-necessary hardware devices and sets necessary hardware devices to low power mode. During this time, the new virtual machine executes a backup specific start-of-day (SOD) initialization sequence. The method also synchronizes the new and old virtual machines. The method also initiates a cache memory backup operation upon synchronization of the new and old virtual machines and then shuts down the old virtual machine."
virtualization,8464245,"Method and system for software 
virtualization
 directly from an installation package","A method and system for providing a virtual system environment directly from an installation package is disclosed. An installation package containing one or more installer applications is received and an installer application providing an instance of an operating system is copied from the installation package to a virtual container created in a test machine. A 
virtualization
 package is created for the selected installed application, and the virtual system environment is provided in the test machine."
virtualization,8464242,"Virtualization
 of configuration settings","A hardware and/or software translation system to automatically apply user-specific configuration settings to a computer irrespective of the application version or operation system version for which the settings were originally established. By automatically applying user-specific configuration settings to a version of an application or operating system, the translation system eliminates any post-installation reconfiguration, thereby simplifying the process of changing or upgrading the version of an application or operating system."
virtualization,8464022,"Virtualization
 with shadow page tables","One or more embodiments provides a shadow page table used by a 
virtualization
 software wherein at least a portion of the shadow page table shares computer memory with a guest page table used by a guest operating system (OS) and wherein the 
virtualization
 software provides a mapping of guest OS physical pages to machine pages."
virtualization,8462945,"**Please see images for: 
( Certificate of Correction ) 
**
 
Protecting video content using 
virtualization","Generally, the present disclosure provides a system and method configured to prevent unauthorized copying of video content in a mobile device. The method may use 
virtualization
 technology to prevent unauthorized copying of the premium video content. A user OS may operate in a virtual machine. A hypervisor may be configured to prevent an application and/or a corrupted OS from reading premium video content from video memory. The hypervisor may be configured to prevent direct memory access to the video content in the video memory."
virtualization,8462780,Offload device-based stateless packet processing,"High-speed processing of packets to, and from, a 
virtualization
 environment can be provided while utilizing hardware-based segmentation offload and other such functionality. A hardware vendor such as a network interface card (NIC) manufacturer can enable the hardware to support open and proprietary stateless tunneling in conjunction with a protocol such as single root I/O 
virtualization
 (SR-IOV) in order to implement a virtualized overlay network. The hardware can utilize various rules, for example, that can be used by the NIC to perform certain actions, such as to encapsulate egress packets and decapsulate packets."
virtualization,8458699,"Methods, systems, and apparatus to prioritize computing devices for 
virtualization","In one embodiment, a 
virtualization
 analysis tool defines a classification weight value for each physical computing device from a plurality of physical computing devices, defines an effective utilization value for that physical computing device, and associates a virtual migration priority with that physical computing device based on the effective utilization value. The 
virtualization
 analysis tool defines the effective utilization value based on the classification weight value, a first utilization weight value, and a second utilization weight value. The first utilization weight value is associated with a first resource of that physical computing device, and the second utilization weight value associated with a second resource of that physical computing device. The virtual migration priority has a first value if the effective utilization value is within a first range of utilization weight values and a second value if the effective utilization value is within a second range of utilization weight values."
virtualization,8458698,Improving performance in a nested virtualized environment,"Methods and systems for improving performance in a 
virtualization
 environment. The method comprising: detecting, by a first software, a first set of features supported by a hardware device, wherein the first software runs on the hardware device; detecting a second set of features with which to run a second software, wherein the second software is launched by the first software with the second set of features; exposing one or more features in the second set of features to the second software, wherein the second software detects and enables the exposed features for a third software launched by the second software; and emulating a first feature without causing a trap such that control is transferred to the second software, in response to determining that the first feature is an exposed feature not included in the first set of features, wherein one or more sensitive events are associated with the first feature."
virtualization,8458490,"System and method for supporting full volume encryption devices in a client hosted 
virtualization
 system","A client hosted 
virtualization
 system includes a full volume encryption (FVE) storage device, a processor, and non-volatile memory with BIOS code and 
virtualization
 manager code. The 
virtualization
 manager initializes the client hosted 
virtualization
 system, authenticates a virtual machine image, launches the virtual machine based on the image, receives a transaction from the virtual machine targeted to the FVE storage device, sends the transaction to the FVE storage device, receives a response from the FVE storage device, and sends the first response to the first virtual machine. The client hosted 
virtualization
 system is configurable to execute the BIOS or the 
virtualization
 manager."
virtualization,9292317,Cloud of virtual clouds for increasing isolation among execution domains,"A method for providing a cloud environment for provisioning a guest virtual machine instance. The method includes selecting at least one machine from a collection of machines as a management node, wherein the at least one machine includes a hypervisor enabled with nested 
virtualization
 capability, deploying a plurality of cloud managers on each management node, selecting at least one machine from the collection of machines as a host node, deploying a plurality of level two hypervisors on each host node, forming a plurality of virtual clouds, wherein each virtual cloud contains at least one of the plurality of cloud managers and one of the plurality of level two hypervisors, and provisioning, via the at least one cloud manager, at least one guest virtual machine instance on top of the at least one level two hypervisors."
virtualization,8458432,"Computer system, storage system and method for controlling power supply based on logical partition","Provided is a computer system, in which a storage system includes a first control module for logically dividing first resources of the storage system and operating them as independent virtual storage systems. A computer includes a second control module for logically dividing second resources of the computer and operating them as independent virtual machines. The computer system holds first information indicating a correlation among the virtual machine, the virtual storage system, and the first resources. The first control module specifies the first resource allocated to the virtual storage system whose power is cut based on the first information, and powers off the specified first resource. Thus, system power consumption can be reduced by managing power of the storage system shared by a plurality of virtual machines in a 
virtualization
 environment."
virtualization,8458430,"**Please see images for: 
( Certificate of Correction ) 
**
 
Configurable and scalable storage system","The system utilizes a plurality of layers to provide a robust storage solution. One layer is the RAID engine that provides parity RAID protection, disk management and striping for the RAID sets. The second layer is called the 
virtualization
 layer and it separates the physical disks and storage capacity into virtual disks that mirror the drives that a target system requires. A third layer is a LUN (logical unit number) layer that is disposed between the virtual disks and the host. By using this approach, the system can be used to represent any number, size, or capacity of disks that a host system requires while using any configuration of physical RAID storage."
virtualization,8458306,"**Please see images for: 
( Certificate of Correction ) 
**
 
Coalescing change notifications in an I/O 
virtualization
 system","Efficient and effective mechanisms for coalescing change notifications such as Registered State Change Notifications (RSCNs) are provided. Multiple hosts are connected to an I/O director that allows 
virtualization
 of I/O resources including Host Bus Adapters (HBAs) for the various hosts. The I/O director is connected to a Fiber Channel switch. When an RSCN is received by the I/O director, the I/O director queries to Fiber Channel fabric to identify the state change and maintains information about the RSCN so that subsequent redundant RSCNs can be discarded. Change notification information is forwarded to the appropriate hosts connected to the I/O director."
virtualization,8453118,"Automated multi-operating system testing with 
virtualization","Techniques are provided for testing one or more applications across multiple operating systems (OSs) using 
virtualization
. A device includes a 
virtualization
 application and a dispatcher. The 
virtualization
 application allows a plurality of guest OSs to execute on a device. The dispatcher is configured to cause a particular file to be stored in a particular location. Each guest OS includes a listener that detects when a file is stored in the particular location. When the listener of each guest OS detects that the particular file is stored in the particular location, the guest OS is configured to perform one or more tasks associated with the particular file. Each guest OS is configured to generate output in response to performing the one or more tasks. The dispatcher is further configured to analyze the output from each of the guest OSs."
virtualization,8452921,Provisioning a pass-through disk in a virtualized computing environment,"A physical host machine determines that a storage device from a network storage system is available to the host machine as a pass-through disk. 
Virtualization
 software running on the host machine assigns the pass-through disk to a temporary resource group on the host machine. The pass-through disk is logically attached to the virtual machine running on the host machine and made available to an operating system and application running on the virtual machine."
virtualization,8448167,"Storage system, and remote copy control method therefor","A storage system includes an information apparatus in which a 
virtualization
 mechanism is implemented to build a virtual machine, a storage apparatus which is coupled to the information apparatus, which includes a first logical volume proving a storage area to be used by the virtual machine, and which includes a virtual disk area and a virtual disk management area on the first logical volume, the virtual disk area used by the virtual machine to store data, the virtual disk management area storing management data for managing the virtual disk area; and a management computer which is coupled to the information apparatus and the storage apparatus, and which includes a remote copy controller configured to copy the virtual disk area and the virtual disk management area on the first logical volume of the storage apparatus to a storage area on a second logical volume included in a second storage device coupled to the storage apparatus. The remote copy controller determines whether, on the second logical volume, there is the virtual disk management area used by the virtual machine. When determining that there is not, the remote copy controller transmits, to the storage apparatus, an instruction to copy the virtual disk management area and the virtual disk area to the second logical volume."
virtualization,8447936,Module state management in a virtual machine environment,"A method for managing software modules of at least two operating systems sharing physical resources of a computing environment, but running in different partitions separated by a 
virtualization
 boundary comprises accumulating module information in a 
virtualization
 subsystem that directs the creation and management of the partitions. The accumulated module information is used across the 
virtualization
 boundary to manage the use of the software modules. Also, a method for managing software modules comprises making at least two operating systems aware that they are being hosted in a virtualized computing environment."
virtualization,8443440,System and method for intelligent coordination of host and guest intrusion prevention in virtualized environment,"A distributed and coordinated security system providing intrusion-detection and intrusion-prevention for the virtual machines (VMs) in a virtual server is described. The 
virtualization
 platform of the virtual server is enhanced with networking drivers that provide a ""fast path"" firewall function for pre-configured guest VMs that already have dedicated deep packet inspection security agents installed. A separate security VM is deployed to provide virtual security agents providing deep packet inspection for non pre-configured guest VMs. The network drivers are then configured to intercept the data traffic of these guest VMs and route it through their corresponding virtual security agents, thus providing a ""slow-path"" for intrusion detection and prevention."
virtualization,8443363,"Coordinated 
virtualization
 activities","A computer includes a plurality of activity modules in multiple virtual machines. An activity module performs an activity, such as malware detection, in a virtual machine. A monitoring module receives virtualized infrastructure information of the computer comprising a hardware configuration of the computer and a virtual machine configuration of the computer. A scheduling module determines, based on the virtualized infrastructure information, scheduling instructions for an activity module. A supervisor communication module causes the activity module to execute based on the scheduling instructions. The scheduling instructions minimize hardware resource conflicts between the activity module and the other activity modules of the computer."
virtualization,8443166,Method for tracking changes in virtual disks,"Systems and methods for tracking changes and performing backups to a storage device are provided. For virtual disks of a virtual machine, changes are tracked from outside the virtual machine in the kernel of a 
virtualization
 layer. The changes can be tracked in a lightweight fashion with a bitmap, with a finer granularity stored and tracked at intermittent intervals in persistent storage. Multiple backup applications can be allowed to accurately and efficiently backup a storage device. Each backup application can determine which block of the storage device has been uptate the finer grained change log."
virtualization,9292316,Cloud of virtual clouds for increasing isolation among execution domains,"A system and an article of manufacture for providing a cloud environment for provisioning a guest virtual machine instance include selecting at least one machine from a collection of machines as a management node, wherein the at least one machine includes a hypervisor enabled with nested 
virtualization
 capability, deploying a plurality of cloud managers on each management node, selecting at least one machine from the collection of machines as a host node, deploying a plurality of level two hypervisors on each host node, forming a plurality of virtual clouds, wherein each virtual cloud contains at least one of the plurality of cloud managers and one of the plurality of level two hypervisors, and provisioning, via the at least one cloud manager, at least one guest virtual machine instance on top of the at least one level two hypervisors."
virtualization,8443156,"Virtualization
 system using hardware assistance for shadow page table coherence","One embodiment of the present invention includes a method for maintaining a shadow page table in at least partial correspondence with guest page mappings of a guest computation. The method marking with a traced write indication at least those entries of the shadow page table that map physical memory locations which themselves encode the guest page mappings, the marking identifying, for a hardware facility, a subset of memory access targets for which uptates into the shadow page table."
virtualization,8443139,SCSI protocol emulation for virtual storage device stored on NAS device,"A 
virtualization
 technique, in accordance with one embodiment of the present invention, includes emulating the small computing system interface (SCSI) protocol to access a virtual SCSI storage device backed by a file stored on network attached storage (NAS)."
virtualization,8442224,"Protecting video content using 
virtualization","Generally, the present disclosure provides a system and method configured to prevent unauthorized copying of video content in a mobile device. The method may use 
virtualization
 technology to prevent unauthorized copying of the premium video content. A user OS may operate in a virtual machine. A hypervisor may be configured to prevent an application and/or a corrupted OS from reading premium video content from video memory. The hypervisor may be configured to prevent direct memory access to the video content in the video memory."
virtualization,8438555,"Method of using an encapsulated data signature for 
virtualization
 layer activation","A system and method for opening a file in a 
virtualization
 workspace of a host computer system. The host computer system includes a 
virtualization
 workspace including a 
virtualization
 agent and virtual software layers. The 
virtualization
 agent detects a request to open a file in the 
virtualization
 workspace. In response to detecting the request, the 
virtualization
 agent determines that the file includes embedded metadata. The 
virtualization
 agent uses the embedded metadata to identify a virtual software layer in which to open the file, activates the virtual software layer, and opens the file using an application that is included in the identified virtual software layer. The virtual software layer includes one or more applications and the embedded metadata includes a signature corresponding to one of the applications with which to open the file. The identified virtual software layer is installed on the host computer system subsequent to being identified."
virtualization,8438409,Operating system (OS) virtualisation and processor utilization thresholds for minimizing power consumption in mobile phones,"A mobile phone that uses OS 
virtualization
 for minimizing power consumption in mobile phones is provided. Apparatus and methods may involve conserving processor power in a mobile phone according to the invention may include the following steps. A first step may be awakening a first processing core from a low power state in response to a first operating system (OS) thread. A following step may include processing the first OS thread using the first processing core. A next step may include determining whether utilization of the first processing core over a first time period has exceeded a predetermined threshold. The method may also include awakening a second processing core from a low power consumption state if utilization of the first processing core over a first time period has exceeded a predetermined threshold."
virtualization,8438363,Optimization of paging cache protection in virtual environment,"A system, method and computer program product for virtualizing a processor include a 
virtualization
 system running on a computer system and controlling memory paging through hardware support for maintaining real paging structures. A Virtual Machine (VM) is running guest code and has at least one set of guest paging structures that correspond to guest physical pages in guest virtualized linear address space. At least some of the guest paging structures are mapped to the real paging structures. A cache of connection structures represents cached paths to the real paging structures. The mapped paging tables are protected using RW-bit. A paging cache is validated according to TLB resets. Non-active paging tree tables can be also protected at the time when they are activated. Tracking of access (A) bits and of dirty (D) bits is implemented along with synchronization of A and D bits in guest physical pages."
virtualization,8438349,Proxy backup of virtual disk image files on NAS devices,"A system and method for backing up a virtual machine executing on a 
virtualization
 server computer are described. A snapshot of a virtual disk image file of the virtual machine may be created on a network-attached storage (NAS) device coupled to the 
virtualization
 server computer. The snapshot may be used to backup the virtual disk image file from the NAS device to a backup storage device without transferring the virtual disk image file through the 
virtualization
 server computer. Mapping information useable to access the plurality of files stored in the virtual disk image file on an individual basis may be created and stored together with the backup copy of the virtual disk image file on the backup storage device."
virtualization,8438256,Migrating functionality in virtualized mobile devices,"One embodiment of the present invention is a method of migrating functionality to a target virtualized mobile device including 
virtualization
 software that supports one or more virtual machines, the method including: (a) embodying the functionality in a virtual machine; and (b) migrating the virtual machine to the target virtualized mobile device."
virtualization,8434093,"Method and system for 
virtualization
 of software applications","A method of virtualizing an application to execute on a plurality of operating systems without installation. The method includes creating an input configuration file for each operating system. The templates each include a collection of configurations that were made by the application during installation on a computing device executing the operating system. The templates are combined into a single application template having a layer including the collection of configurations for each operating system. The collection of configurations includes files and registry entries. The collections also identifies and configures environmental variables, systems, and the like. Files in the collection of configurations and references to those files may be replaced with references to files stored on installation media. The application template is used to build an executable of the virtualized application. The application template may be incorporated into a manifest listing other application templates and made available to users from a website."
virtualization,8433880,System and method for storing data in a virtualized high speed memory system,"A system and method for providing high-speed memory operations is disclosed. The technique uses 
virtualization
 of memory space to map a virtual address space to a larger physical address space wherein no memory bank conflicts will occur. The larger physical address space is used to prevent memory bank conflicts from occurring by moving the virtualized memory addresses of data being written to memory to a different location in physical memory that will eliminate a memory bank conflict."
virtualization,9292219,"Computer system, 
virtualization
 mechanism, and control method for computer system","Computer system is provided with a first physical computer and a second physical computer. The first physical computer is provided with a control device and a storage device coupled to the control device. The control device of the first physical computer constructs a virtual computer and can execute a predetermined guest program on the virtual computer. A part of a region of the storage device is used as a virtual storage device that is a storage device for the virtual computer. In the case in which the control device executes a live migration which is to migrate the virtual computer of the first physical computer to the second physical computer while executing the guest program in a substantial way, the control device executes a control for reducing a data writing amount in a certain period of time to a virtual storage device that has been allocated to the virtual computer."
virtualization,8433801,"Managing resources in 
virtualization
 systems","Methods, systems, and apparatus, including computer program products, for managing resources in 
virtualization
 systems, including multi-cloud systems. The use of supply chain economics alone and in combination with other techniques offers a unified platform to integrate, optimize or improve, and automate resource management in a 
virtualization
 system. These techniques may be used to monitor and control the delivery of service level agreements and software licenses. They may also be used to monitor and control contention of computing resources in a 
virtualization
 system, and to suspend or terminate computing resources."
virtualization,8429669,Virtual machine switching control by prefetching information out of and uptate status,"Provided is a virtual machine including a first 
virtualization
 module operating on a physical CPU, for providing a first CPU, and a second 
virtualization
 module operating on the first CPU, for providing second CPU. The second 
virtualization
 module includes first processor control information holding a state of the first CPU obtained at a time of execution of the user program. The first 
virtualization
 module includes second processor control information containing a state of the physical CPU obtained at the time of the execution of the second 
virtualization
 module, third processor control information containing a state of the physical CPU obtained at the time of the execution of the user program, and prefetch entry information in which information to be prefetched from the third processor control information is set, and, upon detection of a event, the information set in the prefetch entry information is reflected to the first processor control information."
virtualization,8429650,"**Please see images for: 
( Certificate of Correction ) 
**
 
System and method of security management for a virtual environment","A system and method can deploy and manage software services in virtualized and non-virtualized environments. The system provides an enterprise application 
virtualization
 solution that allows for centralized governance and control over software and Java applications. The system uses a plurality of agents to manage the software processes and resources running in the computing environment. The system also uses a controller to collect data from the agents about the current operating performance of the computing environment and to deploy the services in a way that best honors the service level agreements of all deployed services. The communication between each of the plurality of agents and the controller is secured with a mutual authentication method."
virtualization,8427941,"Redundant storage 
virtualization
 subsystem having data path branching functionality","Disclosed is a redundant storage 
virtualization
 subsystem (SVS) having branching functionality. The SVS comprises a first and a second storage 
virtualization
 controller (SVC) and a physical storage device (PSD) array. A first and a second data path are provided between the first SVC and the PSD array passing through a first and a second signal integrity enhancing device (SIED), respectively, and configured as a first pair of redundant data paths. A third and a fourth data path are provided between the second SVC and the PSD array passing through the second and the first SIED, respectively, and configured as a second pair of redundant data paths. In view of the PSD array, the first and fourth data paths form a third redundant data path pair for a PSD, and the third and second data paths form a fourth redundant data path pair for a PSD."
virtualization,8424000,Providing application high availability in highly-available virtual machine environments,"Various systems and methods can provide high availability of an application executing in a highly-available virtual machine environment. One method involves receiving information indicating a state of an application executing in a virtual machine from a monitoring agent executing in the virtual machine. In response to receiving the information, the method involves determining whether the virtual machine should be restarted. Based upon that determination, the method then determines whether the monitoring agent should send a heartbeat message to a 
virtualization
 controller prior to expiration of a timeout interval. The 
virtualization
 controller is configured to restart the virtual machine if the virtual machine does not send the heartbeat message prior to expiration of the timeout interval."
virtualization,8423811,Transparently increasing power savings in a power management environment,"A mechanism is provided for transparently consolidating resources of logical partitions. Responsive to the existence of the non-folded resource on an originating resource chip, the 
virtualization
 mechanism determines whether there is a destination resource chip to either exchange operations of the non-folded resource with a folded resource on the destination chip or migrate operations of the non-folded resource to a non-folded resource on the destination chip. Responsive to the existence of the folded resource on the destination resource chip, the 
virtualization
 mechanism transparently exchanges the operations of the non-folded resource from the originating resource chip to the folded resource on the destination resource chip, where the folded resource remains folded on the originating resource chip after the exchange. Responsive to the absence of another non-folded resource on the originating resource chip, the vitalization mechanism places the originating resource chip into a deeper power saving mode."
virtualization,8423737,Systems and methods for virtualizing storage systems and managing data independently,"Method, data processing systems, and computer program products are provided for virtualizing and managing a storage 
virtualization
 system (SVS) in a storage management architecture. Source data is copied from the source storage media to target data in a target storage media based on a predefined copy policy in a copy mapping table. A relation between the source data and the target data is tracked in a copy mapping table. It is determined if a copy of the requested data exists using the copy mapping table. A least utilized storage system having a copy of the requested storage media is determined. Access to the requested storage media in the least utilized storage system is tested. If access is not possible, access to a copy of the requested storage media in another storage system is provided by"
virtualization,8423632,"Method, network management center, and a related device for configuring a network policy for a virtual port","A method, a network management center, and a related device. The method includes: obtaining a physical network policy group and a media access control (MAC) address of a virtual port; associating the physical network policy group and the MAC address of the virtual port to form a virtual port policy association table; and selecting the physical network policy group corresponding to the MAC address carried by a request from the virtual port policy association table, and delivering the physical network policy group to a physical switch sending the request. When a virtual machine (VM) on the server is migrated, the method may be used to migrate the network policy for the virtual port on a real-time basis. Therefore, the real-time effect of services provided by the VM is improved in the 
virtualization
 process of the server."
virtualization,8423529,"System, device, and method for running third-party data processing applications virtualized on a NAS server","A NAS server runs a native filesystem application that manages the filesystem and also includes a 
virtualization
 component that allows third-party data processing applications to run on the NAS server substantially as though running on a separate server while allowing the applications to access filesystem information without use of the network and without the overhead of network protocols and related operating system processing. The 
virtualization
 component intercepts certain filesystem-related system calls made by the application and directs processing of those filesystem-related system calls (e.g., by the 
virtualization
 component or by the native filesystem application), bypassing certain operating system processes including those relating to network protocol processing."
virtualization,8422677,"Storage 
virtualization
 apparatus comprising encryption functions","A storage 
virtualization
 apparatus comprises a judgment portion. The judgment portion judges whether encryption functions are present in an external storage subsystem having an external logical volume identified based on a write request received from a higher-level device. When the result of the judgment is negative, the storage 
virtualization
 apparatus uses its own encryption functions to encrypt the data of the write request before transmission to the external storage subsystem, but when the result of the judgment is positive, the storage 
virtualization
 apparatus transmits the data of the write request as-is to the external storage subsystem, without using its own encryption functions to perform encryption."
virtualization,9286893,Pre-processed annotation of street grammar in speech enabled navigation systems,"Embodiments of the present invention address deficiencies of the art in respect to 
virtualization
 and provide a novel and non-obvious method, system and computer program product for annotation of street grammar in speech enabled navigation devices. In an embodiment of the invention, a pre-processing street grammar annotation system can be provided. The system can include an annotated street grammar storage that contains street root names wherein each street root name has more than one street suffix associated with said street root name, and a street annotation pre-processor wherein the street annotation pre-processor contains logic enabled to annotate a set of street suffixes to a street root name prior to processing a voice input in a speech enabled navigation device, wherein the street root name has more than one street suffix associated with said street root name."
virtualization,8418187,"Virtualization
 software migrating workload between processing circuitries while making architectural states available transparent to operating system","A data processing apparatus has first processing circuitry which is architecturally compatible with second processing circuitry, but with the first processing circuitry being miero-architccturally different from the second processing circuitry. A switch controller performs a handover operation to transfer performance of the workload from source processing circuitry to destination processing circuitry, with the source processing circuitry being one of the first and second processing circuitry and the destination processing circuitry being the other of the first and second processing circuitry. During the handover operation, the switch controller causes the source processing circuitry to makes it current architectural state available to the destination processing circuitry and is necessary for the destination processing circuitry to successfully lake over performance of the workload from the source processing circuitry. The switch controller masks predetermined processor specific configuration information such that the transfer of the workload is transparent to that operating system."
virtualization,8417945,"Detection and reporting of 
virtualization
 malware in computer processor environments","Methods and systems to detect 
virtualization
 of computer system resources, such as by malware, include methods and systems to evaluate information corresponding to a computer processor operating environment, outside of or secure from the operating environment, which may include one or more of a system management mode of operation and a management controller system. Information may include processor register values. Information may be obtained from within the operating environment, such as with a host application running within the operating environment. Information may be obtained outside of the operating environment, such as from a system state map. Information obtained from within the operating environment may be compared to corresponding information obtained outside of the operating environment. Direct memory address (DMA) translation information may be used to determine whether an operating environment is remapping DMA accesses. Page tables, interrupt tables, and segmentation tables may be used to reconstruct a view of linear memory corresponding to the operating environment, which may be scanned for malware or authorized code and data."
virtualization,8417888,Method and system for execution of applications in conjunction with raid,"Systems and methods are disclosed which allow various applications which may utilize a RAID system (or other types of applications) to be executed on the same set of computing devices which implement that RAID system. More particularly, in certain embodiments a 
virtualization
 layer may be executed on a data bank. A set of desired application programs may be executed using this 
virtualization
 layer, where the context for each instance of the applications, executing on the 
virtualization
 layer may be stored in a volume kept utilizing the RAID system."
virtualization,8417800,"Method and system for network configuration and/or provisioning based on open 
virtualization
 format (OVF) metadata","Certain aspects of a method and system for network configuration and/or provisioning based on open 
virtualization
 format (OVF) metadata may include accessing a set of port profiles for one or more virtual machines from a port profile database based on OVF metadata. One or more virtual machines may be configured, deployed, and/or managed based on the accessed set of port profiles. One or both of a uniform resource identifier (URI) to the profile data base and/or a port profile identification may be included in the OVF metadata to allow a virtual machine (VM) administrator device to access the set of port profiles for the one or more virtual machines from the port profile database. Alternatively, the set of port profiles may be included in the OVF metadata to allow the VM administrator device to access the set of port profiles for the one or more virtual machines from the port profile database."
virtualization,8413241,"Integrated intrusion deflection, detection and introspection","Methods and apparatus are provided for integrated deflection, detection and intrusion. Within a single computer system configured for operating system 
virtualization
 (e.g., Solaris.TM., OpenSolaris.TM.), multiple security functions execute in logically independent zones or containers, under the control and administration of a global zone. Such functions may illustratively include a demilitarized zone (DMZ) and a honeypot. Management is facilitated because all functions work within a single operating system, which promotes the ability to configure, monitor and control each function. Any given zone can be configured with limited resources, a virtual network interface circuit and/or other features."
virtualization,8413148,"**Please see images for: 
( Certificate of Correction ) 
**
 
Virtualization
 support in platform management (PLM) information model","A method and system for protecting against failure of hardware elements (HEs) in a virtual machine system using an information model with 
virtualization
 support. Based on the information model, the method boots virtual machine monitors (VMMs), virtual machines (VMs) and operating systems (OSes). The information model includes a graph of objects representing configured relationships between the hardware elements (HEs), VMMs, VMs, and OSes through parent child relationships between the graph s objects. The graph of objects includes: a domain object, HE objects, VMM objects, VM objects, and OS objects. The VM objects of a migration-enabled type represent those of the VMs that may migrate between the VMMs. Based on the runtime associations between the VMM objects and the VM objects of the migration-enabled type, the method identifies which of the migration-enabled VMs are hosted by a same HE and are therefore vulnerable to hardware failure of the same HE."
virtualization,8413142,"Storage optimization selection within a 
virtualization
 environment","Storage optimization selection for virtual disks of a 
virtualization
 environment, where the storage optimization can be selected based in part on the disk type of a virtual disk included in a virtual machine. The disk type of the virtual disk can be discovered by the 
virtualization
 environment which queries a database within the 
virtualization
 environment for metadata associated with the virtual disk. The metadata can be created when a virtual desktop infrastructure creates the virtual disk, and a virtual machine template that includes the at least one virtual disk. The virtual disk can be modified to either include or be associated with the metadata that describes a disk type of the virtual disk. Upon executing the virtual machine that includes the modified virtual disk, a storage subsystem of the 
virtualization
 environment can obtain the metadata of the virtual disk to discover the disk type of the virtual disk."
virtualization,8413141,Copying segments of virtual resource definition to create and deploy a virtual resource on a physical resource,"The disclosure and claims herein are directed to copying segments of a virtual resource definition from an existing virtual resource to create a new virtual resource definition or modifying an existing one to simplify 
virtualization
 management. The 
virtualization
 manager divides a virtual resource definition into a number of reusable segments. A user may then select one or more segments and place them into a new or existing virtual resource definition. The user can choose to mix and match segments to quickly create or modify a virtual resource definition such as a virtual server, virtual printer or virtual data storage. Any default information in the new virtual resource or old information in the existing resource is replaced by the information in the copied segment. Any dependencies in the existing virtual resource are resolved with user input to break the dependencies or copy dependent data."
virtualization,8413136,"Application 
virtualization","A virtual application packaged for a specific executing environment may be executed on a processing device having an executing environment different from the specific executing environment. A reference, included in extracted installer metadata, to one or more key paths of a hierarchically-structured data store may be modified according to a set of rules related to the executing environment detected in the processing device. The modified extracted installer metadata may be provided to an installer for installing the virtual application. During execution of the virtual application, a request to read, write, or modify the hierarchically-structured data store may be intercepted and changed, such that a first key path included in the request may be mapped to a second key path, based on the detected executing environment. Similarly, a response to the request, which may include the second key path, may be intercepted and modified, to the first key path."
virtualization,8412869,"Redundant storage 
virtualization
 computer system","A redundant storage 
virtualization
 computer system is provided. The redundant storage 
virtualization
 computer system comprises a host entity for issuing an IO request, a redundant storage 
virtualization
 controller set coupled to the host entity for performing an IO operation in response to the IO request issued by the host entity, and a plurality of physical storage devices for providing storage space to the computer system. Each of the physical storage devices is coupled to the redundant storage 
virtualization
 controller set. The redundant storage 
virtualization
 controller set comprises a first and a second storage 
virtualization
 controller both coupled to the host entity, the storage 
virtualization
 controllers communicate therebetween via a PCI-Express interconnect. In the redundant storage 
virtualization
 controller set, a storage 
virtualization
 controller will take over the functionality originally performed by the alternate storage 
virtualization
 controller when the alternate storage 
virtualization
 controller is not on line."
virtualization,9286448,Enhanced software license management,"Systems, methods, computer program product embodiments are provided for enhanced license management. An embodiment includes providing an asset management module for managing software license utilization in a computer processing environment, and allowing configuration of the asset management module to designate software license utilization based upon a containment level associated with 
virtualization
 capabilities of one or more computer processing systems within the computer processing environment."
virtualization,8412860,"Input/output (I/O) 
virtualization
 system","An Input/Output (IO) 
Virtualization
 (IOV) system couples or connects multiple host computers and IO devices to a managed transport fabric to provide IO 
virtualization
. The host computers may run any operating system to provide a virtualized environment for guest operating systems. The host interface to the IOV system is PCI-Express (PCIe). The IO devices are PCIe based to provide maximum compatibility with industry standard devices, but are not so limited. The IOV system comprises a management central processor unit (MCPU) coupled to transport fabric. The IOV system comprises device interfaces coupled to the transport fabric and to independent input/output (IO) devices. Each device interface couples to the IO device of the independent IO devices. The IOV system comprises host interfaces coupled to the transport fabric. Each host interface couples to a host computer of the independent host computers and exposes functions of the independent IO devices to the host computer."
virtualization,8412810,"**Please see images for: 
( Certificate of Correction ) 
**
 
Provisioning and managing a cluster deployed on a cloud","A system is provided to provision and manage cloud-based clustered application deployment. In one example embodiment, a cloud-based clustered application deployment uses a three tier topology that includes a load balancing tier, an application tier, and a database tier. Each tier comprises a set of nodes, where each node is implemented using a virtual instance of a machine running within a public 
virtualization
 space, such as, e.g., the 
virtualization
 space provided by Amazon s Elastic Compute Cloud (EC2) service. A controller is provided to enforce sequential start sequence of a cluster using an asynchronous messaging system that provides notifications to cluster nodes as the individual nodes of the cluster become available. This messaging system is also used when the size of the cluster is increased or decreased."
virtualization,8412809,"Method, apparatus and computer program product implementing multi-tenancy for network monitoring tools using 
virtualization
 technology","Method, apparatus and computer program product manage a plurality of networks with a single tenant network management tool using 
virtualization
 and implement control plane 
virtualization
 of the single tenant management tool; data storage 
virtualization
 of a data storage apparatus and network address 
virtualization
 of an available address range. A virtual machine may be implemented for each network of the plurality of networks to contain an instance of the single tenant management tool. In one implementation, a proxy is used to implement data storage 
virtualization
. In another implementation, separate data storage is maintained for each network and data storage 
virtualization
 is achieved by managing the network protocol stack 
virtualization
. The network address 
virtualization
 may be implemented using machine-level 
virtualization
 or operating-system-level 
virtualization
."
virtualization,8412662,Method and system of interaction within both real and virtual worlds,"A method and system for controlling the activities of real and virtual entities by monitoring and analyzing a real entity s activities and providing responses to affect virtual and real behavior patterns, according to pre-established rules. A Real-time Monitoring and 
Virtualization
 (RMV) utility collects information about the real entity s behavior utilizing monitors. The RMV utility creates a model of the behavior of the real entity. The RMV utility utilizes the created model and maps one or more first characteristics of the behavior of the real entity to one or more second characteristics of a behavior of a virtual entity. From the monitored and mapped characteristics, the RMV utility identifies desired behavior patterns (i.e., responses) for the virtual entity, according to pre-established rules. The RMV utility triggers actions of the real entity corresponding to the responses selected for the desired behavior patterns of the virtual entity."
virtualization,8407700,"Methods and systems for merging 
virtualization
 sublayers","A computer-implemented method may include identifying first and second sublayers of a virtualized application. The first and/or second 
virtualization
 sublayers may include a read-write sublayer, a read-only sublayer, a virtual-reset-point sublayer, and/or a patch sublayer. The computer-implemented method may also include merging an instance of the first 
virtualization
 sublayer with an instance of the second 
virtualization
 sublayer. Various other methods, systems, and computer-readable media are also disclosed."
virtualization,8402540,Systems and methods for processing data flows,"A flow processing facility, which uses a set of artificial neurons for pattern recognition, such as a self-organizing map, in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems, including computer networks. Flow processing for switching, security, and other network applications, including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security, 
virtualization,
 and web connection security. A flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the IP-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps. Exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources. Intrusion Detection and Protection (IDP) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems, including computer networks."
virtualization,8402458,Methods and systems for converting non-layered-software-application installations into layered installations,"A method may include receiving a request to convert a non-layered installation of a software application into a layered installation of the software application. The method may also include determining a base location of at least one file associated with the non-layered installation of the software application. The method may further include creating the layered installation of the software application by transitioning the at least one file from the base location to a 
virtualization
 layer. Various other methods, systems, and computer-readable-media are also disclosed."
virtualization,8402441,Monitoring execution of guest code in a virtual machine,"A method is provided for monitoring registered code in a virtual machine of a 
virtualization
 system. The method includes instantiating a guest in the virtual machine of the 
virtualization
 system and monitoring execution of code registered for monitored execution in an execution context of the guest. The monitoring is performed by the 
virtualization
 system and is hidden from computations of the guest."
virtualization,8402191,"Computing element 
virtualization","System and method for 
virtualization
 of computing elements. A hypervisor provides 
virtualization
 of one or more peripherals for one or more computing elements. The hypervisor may further allow separate instances of an operating system to be suspended on one computing element to allow another application to be processed by replacing the state information of the computing element. The suspended instance may be resumed on the same or a different computing element."
virtualization,8402119,Real-load tuning of database applications,"A database environment that includes one or more database production servers, one or more database test servers, and a 
virtualization
 connection that provides incoming service request traffic to both the database production server and the database test server. However, the database production server responds to the database service requests, while the database test server does not. The database test server may be tested for a variety of different configurations in an attempt to find a better performing configuration. The testing is in real-time as the database test server is subjected to the same incoming service request traffic as the database production server."
virtualization,9286095,"Adaptive dynamic selection and application of multiple 
virtualization
 techniques","Autonomous selection between multiple 
virtualization
 techniques implemented in a 
virtualization
 layer of a virtualized computer system. The virtual machine monitor implements multiple 
virtualization
 support processors that each provide for the comprehensive handling of potential 
virtualization
 exceptions. A virtual machine monitor resident 
virtualization
 selection control is operable to select between use of first and second 
virtualization
 support processors dependent on identifying a predetermined pattern of temporally local privilege dependent instructions within a portion of an instruction stream as encountered in the execution of a guest operating system."
virtualization,8397240,Method to dynamically provision additional computer resources to handle peak database workloads,"A method to handle peak database workloads may include requesting resources, receiving virtual-machine information in response to the requesting, allocating first and second portions of a workload according to the virtual-machine information, processing the first portion on a virtual machine to generate a first result, creating a cloned virtual machine with a 
virtualization
 layer, and cloning with the 
virtualization
 layer a storage allocated to the virtual machine to create a cloned storage."
virtualization,8397239,"Virtual computer systems and computer 
virtualization
 programs","Disclosed are a virtual computer system and method, wherein computer resources are automatically and optimally allocated to logical partitions according to loads to be accomplished by operating systems in the logical partitions and setting information based on a knowledge of workloads that run on the operating systems. Load measuring modules are installed on the operating systems in order to measure the loads to be accomplished by the operating systems. A manager designates the knowledge concerning the workloads on the operating systems through a user interface. An adaptive control module determines the allocation rations of the computer resources relative to the logical partitions according to the loads and the settings, and issues an allocation varying instruction to a hypervisor so as to thus instruct variation of allocations."
virtualization,8397138,"Method and system for network latency 
virtualization
 in a cloud transport environment","A cache device is disposed on a connection path between a user computer executing a software application and a network. The application exchanges data with a further computer via the network. The cache device includes a cache memory and a processor. The cache device is configured to measure, by the processor, a first latency between the user computer and the further computer. The cache device is further configured to determine an acceptable latency range based on the latency and a requirement of the software application. The cache device is further configured to measure a second latency between the user computer and the further computer. The cache device is further configured to store, in the cache memory, a set of data transmitted from the user computer to the further computer, if the second latency is not within the acceptable latency range."
virtualization,8396992,System and method for virtualizing the peripherals in a terminal device to enable remote management via removable portable media with processing capability,"Systems and methods for virtualizing the peripherals in a wireless device to enable remote management via removable portable media with processing capability are described. One aspect may include a system for virtualizing a peripheral device of a wireless device from a media device, the system comprising a media device, including a first memory; a processor coupled to said first memory; and a 
virtualization
 device controller interface remote layer adapted to run on said processor and first memory, wherein said 
virtualization
 device controller interface remote layer is adapted to communicate with a peripheral device of the wireless device."
virtualization,8396986,Method and system of virtual machine migration,"In cooperation between each data center and a WAN, virtual machine migration is carried out without interruption in processing so as to enable effective power-saving implementation, load distribution, or fault countermeasure processing. Each node located at a boundary point between the WAN and another network is provided with a network address translation (NAT) function that can be set dynamically to avoid address duplication due to virtual machine migration. Alternatively, each node included in the WAN is provided with a network 
virtualization
 function; and there are implemented a virtual network connected to a data center for including a virtual machine before migration, and a virtual network connected to a data center for including the virtual machine after migration, thereby allowing coexistent provision of identical addresses. Thus, the need for changing network routing information at the time of virtual machine migration can be eliminated, and a setting change for migration accomplished quickly."
virtualization,8396836,"System for mitigating file 
virtualization
 storage import latency","A system and method for reducing latency when re-routing at least partial client communications from a first, active data center site to a second data center site due to a 
virtualization
 service disruption. Configuration data is imported from the first file 
virtualization
 device, wherein the configuration data represents object relationships and mapping information between components in the first data center site and the second data center site. An instruction is received for the back-up file 
virtualization
 device to begin handling at least one 
virtualization
 service that is disrupted at the first data center site. A most recent import of the configuration data is loaded for the one or more disrupted 
virtualization
 services and enabled such that the back-up file 
virtualization
 device performs the disrupted 
virtualization
 service with one or more storage devices in the second data center site using the at least a portion of the imported configuration data."
virtualization,8396807,"Managing resources in 
virtualization
 systems","Methods, systems, and apparatus, including computer program products, for managing resources in 
virtualization
 systems, including multi-cloud systems. The use of supply chain economics alone and in combination with other techniques offers a unified platform to integrate, optimize or improve, and automate resource management in a 
virtualization
 system. These techniques may be used to monitor and control the delivery of service level agreements and software licenses. They may also be used to monitor and control contention of computing resources in a 
virtualization
 system, and to suspend or terminate computing resources."
virtualization,8392916,"Multiple layers of 
virtualization
 in a computing system","In accordance with one embodiment, a method of nesting a second virtual machine (VM) on a first VM running on a physical machine is provided. The method comprises receiving a first instruction from the physical machine, wherein the first instruction originates from the first VM, wherein a first control structure is associated with the first VM, and wherein a second control structure is associated with the second VM; creating a secondary control structure based on the second control structure associated with the second VM; providing the first instruction and the secondary control structure to the physical machine, wherein the physical machine executes the first instruction according to information included in the secondary control structure; and"
virtualization,8392648,Storage system having a plurality of flash packages,"A storage system 100, which has a plurality of flash packages 230, has a function for minimizing the imbalance of the number of deletions of each block inside the flash package 230 and a block-unit capacity 
virtualization
 function, and efficiently manifests lessening of the imbalance of the number of deletions and reduction in the data storage capacity for the entire storage system 100 by having functions for calculating the number of deletions and the data occupancy of each flash package 230, and for transferring data between the flash packages 230 on the basis of the values of these number of deletions and data occupancy."
virtualization,8392623,Guest/hypervisor interrupt coalescing for storage adapter virtual function in guest passthrough mode,"A method is described for coalescing input/output (IO) interrupts to a virtual machine (VM) running on a host computer. At a 
virtualization
 layer of the host computer that supports execution of the VM receives an IO interrupt in response to a completion of an IO request of the VM, wherein a transmission of the IO request by the VM to an IO device bypasses the 
virtualization
 layer. The 
virtualization
 layer then determines whether the VM has responded to a most recently delivered IO interrupt to the VM by the 
virtualization
 layer, and drops the IO interrupt if the VM has not responded to the most recently delivered IO interrupt, thereby failing to deliver the IO interrupt to the VM."
virtualization,9286094,"Human interface device 
virtualization
 using paravirtual USB system","Methods and systems for performing device 
virtualization
 are described herein. Hardware devices may be virtualized for use by multiple operating system instances executing on a single device. The device may be virtualized by detecting input at the device, notifying a control domain of the input, the control domain determining a virtual machine (e.g., a guest domain) for which the input is intended, and passing the input from the control domain to the guest domain. There may be multiple guest domains on the device, each capable of receiving input from the hardware being virtualized. The virtualized hardware may include, e.g., a digitizer such as a touch digitizer capable of recognizing multiple concurrent inputs. Other hardware devices can also be virtualized. 
Virtualization
 may be performed using device emulation in the control domain, or using USB passthrough, among other techniques."
virtualization,8392373,Systems and methods for retaining an executable environment during a data archive process,"A computer-implemented method for retaining an executable environment during a data archive process is described. An executable file that is associated with an archived data file is identified. The executable file is part of a 
virtualization
 application layer. An identifier is archived that identifies the 
virtualization
 application layer. The identifier is associated with the archived data file. The 
virtualization
 application layer is provided when the archived data file is restored. The restored data file is accessed with the executable file."
virtualization,8392372,Methods and systems for snapshot reconstitution,"A method, computer readable medium, and a system for reconstituting a virtual snapshot of files in a file 
virtualization
 system includes forming at a file 
virtualization
 device a virtual snapshot that includes a plurality of physical snapshots associated with one or more file storage devices participating in the virtual snapshot, receiving a request for performing an operation on one or more physical snapshots in the plurality of physical snapshots, providing the one or more physical snapshots in response to the request for performing the operation when the one or more physical snapshots exists in the virtual snapshot, and reconstituting the virtual snapshot by including the one or more physical snapshots to form a reconstituted virtual snapshot in response to the request for performing the operation when the one or more physical snapshots do not exist in the virtual snapshot."
virtualization,8387130,"Authenticated service 
virtualization","Virtualizing a service is disclosed. A request to access a service from a first server is received from a client. A secret data associated with the first server is used to process the received request. The processed request is sent to a second server. The first and second servers are associated with a 
virtualization
; and wherein the processed request can be used by the second server to authenticate the client."
virtualization,8387062,"Virtualization
 of storage buffers used by asynchronous processes",The amount of host real storage provided to a large guest storage buffer is controlled. This control is transparent to the guest that owns the buffer and is executing an asynchronous process to
virtualization,8386853,System and method for a staggered execution environment,"A staggered execution environment is provided to safely execute an application program against software failures. In an embodiment, the staggered execution environment includes one or more probe virtual machines that execute various portions of an application program and an execution virtual machine that executes the same application program within a time delay behind the probe virtual machines. A 
virtualization
 supervisor coordinates the execution of the application program on one or more probe virtual machines. The probe virtual machines are used to detect and correct software failures prior to the execution virtual machine encountering them. The 
virtualization
 supervisor embargos output data in order to ensure that erroneous data is not released which may adversely affect external processes."
virtualization,8386685,"Apparatus and method for packet based storage 
virtualization","The present invention provides a method and apparatus for data processing and 
virtualization
. The method and apparatus are configured to receive communications, separate a command communication from a data communication, parallel process the command communication and the data communication, generate at least one virtual command based on the command communication, and generate virtual data according to the at least one virtual command. The apparatus can comprise a parallel 
virtualization
 subsystem configured to separate data communications from command communications and to parallel process the command communications and the data communications, to generate virtual commands and to generate virtual data according to a virtual command, and a physical volume driver coupled with the parallel 
virtualization
 subsystem, wherein the physical volume driver receives the virtual data and configures the virtual data."
virtualization,8386654,"**Please see images for: 
( Certificate of Correction ) 
**
 
System and method for transforming PCIe SR-IOV functions to appear as legacy functions","A system for transforming a single root input/output 
virtualization
 (SR-IOV) function to appear as a legacy function, and a corresponding method includes a switch platform coupled between a legacy host and a SR-IOV-enabled device. The switch platform includes a processor programmed to discern configuration cycles by type and to process the configuration cycles, and one or more local registers that store data related to the configuration cycles."
virtualization,8386571,"**Please see images for: 
( Certificate of Correction ) 
**
 
Mail manufacturing 
virtualization","Mail manufacturing 
virtualization
 is performed at a centralized routing site. This includes receiving, from at least one mailing source, electronic mailing data associated with at least one mailing and determining a mail routing distribution for the received electronic mailing data. Similarly, mail manufacturing 
virtualization
 includes routing the electronic mailing data to a plurality of output centers according to the determined mail routing distribution, where the plurality of output centers are configured to generate physical mail from the electronic mailing data and facilitating sending the physical mail to at least one respective recipient."
virtualization,8381231,Deployment and management of virtual containers,"A system virtualizes applications on a managed endpoint using containers. A managed endpoint receives a virtualized container from an IT automation appliance. The virtualized container includes an application and a 
virtualization
 module. The 
virtualization
 module includes computer program instructions for virtualizing the application. An operating system API call made by the application during execution is intercepted, and a portion of the computer program instructions are executed based on the operating system API call. The computer program instructions modify the behavior of the application to effect the file and data 
virtualization
 of the application. A virtualized container can be deployed and uptating of the virtualized container."
virtualization,8381002,Transparently increasing power savings in a power management environment,"A mechanism is provided for transparently consolidating resources of logical partitions. Responsive to the existence of the non-folded resource on an originating resource chip, the 
virtualization
 mechanism determines whether there is a destination resource chip to either exchange operations of the non-folded resource with a folded resource on the destination chip or migrate operations of the non-folded resource to a non-folded resource on the destination chip. Responsive to the existence of the folded resource on the destination resource chip, the 
virtualization
 mechanism transparently exchanges the operations of the non-folded resource from the originating resource chip to the folded resource on the destination resource chip, where the folded resource remains folded on the originating resource chip after the exchange. Responsive to the absence of another non-folded resource on the originating resource chip, the vitalization mechanism places the originating resource chip into a deeper power saving mode."
virtualization,9286087,"Storage optimization selection within a 
virtualization
 environment","Storage optimization selection for virtual disks of a 
virtualization
 environment, where the storage optimization can be selected based in part on the disk type of a virtual disk included in a virtual machine. The disk type of the virtual disk can be discovered by the 
virtualization
 environment which queries a database within the 
virtualization
 environment for metadata associated with the virtual disk. The metadata can be created when a virtual desktop infrastructure creates the virtual disk, and a virtual machine template that includes the at least one virtual disk. The virtual disk can be modified to either include or be associated with the metadata that describes a disk type of the virtual disk. Upon executing the virtual machine that includes the modified virtual disk, a storage subsystem of the 
virtualization
 environment can obtain the metadata of the virtual disk to discover the disk type of the virtual disk."
virtualization,8380939,System and method for maintaining memory page sharing in a virtual environment,"In a virtualized system using memory page sharing, a method is provided for maintaining sharing when Guest code attempts to write to the shared memory. In one embodiment, 
virtualization
 logic uses a pattern matcher to recognize and intercept page zeroing code in the Guest OS. When the page zeroing code is about to run against a page that is already zeroed, i.e., contains all zeros, and is being shared, the memory writes in the page zeroing code have no effect. The 
virtualization
 logic skips over the writes, providing an appearance that the Guest OS page zeroing code has run to completion but without performing any of the writes that would have caused a loss of page sharing. The pattern matcher can be part of a binary translator that inspects code before it executes."
virtualization,8380815,"Root node for file level 
virtualization","A root node creates and issues an object ID comprising share information designating a share unit, which is a logical public unit. The share unit is a logical public unit comprising no less than two objects. Transfer control information in which share information is associated with device information showing a device for managing this share unit, is prepared for each share unit. The root node receives request data, which has an object ID comprising share information, specifies device information corresponding to the share information in this object ID from the transfer control information, and transfers the request data to the device indicated in this device information."
virtualization,8380806,"System and method for absolute path discovery by a storage 
virtualization
 system","A system and method provides for enabling a storage 
virtualization
 system to dynamically discover shares on a network attached storage file system is disclosed. Certain network attached storage systems represent user shares using abbreviated symbolic path names rather than full absolute path names. These network attached storage systems can correctly map the abbreviated path address to the actual file location; however, when a storage 
virtualization
 system is implemented to manage shares or files in these shares, it cannot access these files because it does not have the absolute path address. An embodiment of the present invention provides software instructions to augment the capabilities of the storage 
virtualization
 system, enabling it to map files with abbreviated share names, and therefore provide it with the ability to access these types of network attached storage systems."
virtualization,8375387,Product independent orchestration tool,"A self-replicating machine includes a 
virtualization
 tool, a provisioning tool, and a configuration tool, stored in a distributable self-contained repository of the machine. The machine is able to automatically rebuild itself solely from the tools stored in the distributable self-contained repository. The 
virtualization
 tool is configured to build one or more virtual machines on the machine. Each virtual machine has a corresponding operating system and environment. The provisioning tool is configured to provision the one or more virtual machines. The configuration tool is to configure the one or more provisioned virtual machines. A custom configuration management tool further customize and configure the physical machine for specific users. A configuration management tool is configured to orchestrate and automate a deployment process, and to interface with an underlying product having a corresponding functionality."
virtualization,8373714,"Virtualization
 of graphics resources and thread blocking","Virtualization
 of graphics resources and thread blocking is disclosed. In one exemplary embodiment, a system and method of a kernel in an operating system including generating a data structure having an identifier of a graphics resource assigned to a physical memory location in video memory, and blocking access to the physical memory location if a data within the physical memory location is in transition between video memory and system memory wherein a client application accesses memory in the system memory directly and accesses memory in the video memory through a virtual memory map."
virtualization,8370899,Disposable browser for commercial banking,"Methods, computer program products, and apparatuses are provided for performing and facilitating secure communication between a client-side computing device and a remote application server through a virtual computing environment provided by an intermediate 
virtualization
 server. The virtual computing environment includes a disposable component, allowing all settings to be initialized to a secure state after each user session."
virtualization,8370838,"System and method for starting a cloud-based 
virtualization
 system with partially deprivileged host OS","A computing cloud comprising at least one computing node having a Virtual Machine (VM) running on a user level. A plurality of additional computing nodes, each node having a Hypervisor with the highest privilege level, a Virtual Machine Monitor (VMM) running with no higher privileges than the Hypervisor, and a plurality of Virtual Machines (VMs) running on a user level. Each node has a Primary operating system (POS) running within the one of its VMs. The POS has direct access to hardware devices of the corresponding computing node. The other VMs use the corresponding POS of its node to access the hardware devices."
virtualization,8370836,"System and method to enable power related decisions in a 
virtualization
 environment","A 
virtualization
 system includes an information handling system with a power detector that detects a power level of the information handling system and another power detector that detects another power level of the information handling system, a power status module, and a virtual machine manager that starts workloads on the information handling system. The power status module receives the power levels and sends the power levels to the virtual machine manager. The virtual machine manager apportions a first portion of the first power level to the first workload, apportions a second portion of the first power level to the second workload, apportions a first portion of the second power level to the first workload, and apportions a second portion of the second power level to the second workload."
virtualization,8370833,Method and system for implementing a virtual storage pool in a virtual environment,"A system and method for implementing distributed data storage. In particular, the system includes a plurality of 
virtualization
 servers, each of which is associated with available data resources. Each 
virtualization
 server supports one or more application virtual machines through a 
virtualization
 layer. In addition, a plurality of storage virtual machines is included in the system. Each storage virtual machine is associated with a corresponding and participating 
virtualization
 server. A virtual storage pool is included in the system, wherein each storage virtual machine allows the export and aggregation of available data resources within a corresponding 
virtualization
 server into the virtual storage pool."
virtual_machine,9385934,Dynamic network monitoring,"Approaches for monitoring performance in a networked environment are provided. An approach includes monitoring, using a first metric, performance of a first host running a 
virtual machine
. The approach also includes determining, using a computer device, a second metric based on the 
virtual machine
 being migrated from the first host to a second host, wherein the second metric is a function of: (i) the first metric and (ii) a comparison of the first host and the second host. The approach further includes monitoring, using the second metric, performance of the second host running the 
virtual machine
."
virtual_machine,9384031,"Information processor apparatus, 
virtual machine
 management method and 
virtual machine
 management program","An information processing apparatus that controls a resource allocation amount for one or a plurality of virtual machines run by a computer, the information processing apparatus includes a memory that stores an allowable index upper limit and index information indicating an association between the resource allocation amount and an index and a processor that, when a 
virtual machine
 lacking resources is detected from a resource usage status, increases the resource allocation amount allocated to the 
virtual machine
 lacking resources such that an index value calculated according to the index information and the resource allocation amount for the one or a plurality of virtual machines does not exceed the upper limit."
virtual_machine,9354918,"Migrating local cache state with a 
virtual machine","Embodiments relate to migrating a local cache state with a 
virtual machine
 (VM) migration. An aspect includes detecting that a VM executing on a source host machine has been paused as part of a migration of the VM from the source host machine to a target host machine. A state of a first local cache associated with the VM is identified. The first local cache is accessible by the source host machine and includes data previously fetched from a shared storage. Pre-fetch hints that are based on the state of the first local cache are sent to the target host machine prior to the migration completing. The pre-fetch hints are utilized by the target host machine to fetch, from the shared storage, at least a subset of the data stored in the first local cache for storage in a second local cache accessible by the target host machine."
virtual_machine,9100399,"**Please see images for: 
( Certificate of Correction ) 
**
 
Portable virtual systems for composite solutions","A mechanism is provided in a data processing system for providing portable composite solutions. The mechanism deploys a set of virtual images for a plurality of components of a composite solution to a build environment to form a set of virtual machines. The mechanism deploys a network virtual image to the build environment to form a network 
virtual machine
. The network 
virtual machine
 comprises a router. The mechanism configures the router to create a private subnet with a set of fixed addresses and set of host names for the composite solution. Optionally, the mechanism may discover the fixed addresses during the build phase. The mechanism optionally installs middleware components to the set of virtual machines for the composite solution to form a set of solution virtual machines. The mechanism captures the set of solution virtual machines as a set of solution virtual images as a portable composite solution."
virtual_machine,9100311,Metering software infrastructure in a cloud computing environment,"A system and method include determining, by a processing device, a first duration of usage of a hardware resource on which a 
virtual machine
 is instantiated in a cloud, determining, by the processing device from the 
virtual machine
 on the cloud, a second duration of usage of a software resource that is utilized by a user on the 
virtual machine,
 the software resource comprising at least part of an operating system, and calculating, by the processing device, a usage of the cloud by the user in view of the first duration and the second duration."
virtual_machine,9100216,System and method for scaling IPv6 on a three-tier network architecture at a large data center,"Some implementations provide a method for managing switches in a data center that includes: (1) establishing a connection from one switch to another switch in the data center, the data center providing a plurality of virtual local area networks (VLANs), each VLAN including at least one 
Virtual Machine
 and capable of spanning across more than one of the plurality of switches; (2) provisioning device prefixes for IPv6 addresses, a given device prefix corresponding to a particular VLAN on a particular switch in the data center, the given device prefix included in a host address of a particular 
virtual machine,
 the particular 
virtual machine
 hosted on a server computer, the sever computer connected to the particular switch without additional intervening switches; (3) configuring a hardware memory to include prefix information and address information; and (4) transferring packets by using the prefix information and the address information."
virtual_machine,9100188,Hardware-based root of trust for cloud environments,"Apparatuses, computer readable media, methods, and systems are described for generating and communicating a create measured 
virtual machine
 (VM) request, the request comprising a network address of a boot server, initiating establishment of a secure tunnel with a measured VM, receiving a quote from the measured VM, and determining, by a processor, whether the measured VM is authentic based on the quote."
virtual_machine,9098709,Protection of user data in hosted application environments,"A method of converting an original application into a cloud-hosted application includes splitting the original application into a plurality of application components along security relevant boundaries, mapping the application components to hosting infrastructure boundaries, and using a mechanism to enforce a privacy policy of a user. The mapping may include assigning each application component to a distinct 
virtual machine,
 which acts as a container for its assigned component."
virtual_machine,9098698,Methods and apparatus for application isolation,"Processor(s) for detecting malicious software. A hardware 
virtual machine
 monitor (HVMM) operates under a host OS. Container(s) initialized with network application template(s) operate under a guest OS VM. A detection module operates under the guest OS VM includes a trigger detection module, a logging module and a container command module. The trigger detection module monitors activity on container(s) for a trigger event. The logging module writes activity report(s) in response to trigger event(s). The container command module issues command(s) in response to trigger event(s). The command(s) include a container start, stop and revert commands. A 
virtual machine
 control console operates under the host OS and starts/stops the HVMM. A container control module operates under the guest OSVM and controls container(s) in response to the command(s). The server communication module sends activity report(s) to a central collection network appliance that maintains a repository of activities for infected devices."
virtual_machine,9098578,"Interactive search monitoring in a 
virtual machine
 environment","A method and system for providing up-to-date monitoring results in a 
virtual machine
 environment are described. A host controller may receive requests to execute a plurality of searches pertaining to a plurality of objects in a 
virtual machine
 system. The host controller may execute the plurality of searches and provides the results to one or more requestors. The host controller may monitor data associated with the plurality of objects to detect a change in plurality of objects. The host controller may re-execute searches impacted by the change and may refrain from re-executing searches which are not impacted by the change."
virtual_machine,9098461,Live snapshots of multiple virtual disks,"A system and method are disclosed for servicing requests to create live snapshots of a plurality of virtual disks in a virtualized environment. In accordance with one example, a computer system issues one or more commands to create a first snapshot of a first virtual disk of a 
virtual machine
 and a second snapshot of a second virtual disk of the 
virtual machine while the virtual machine
 is running. The computer system determines that the creating of the second snapshot failed and, in response, destroys the first snapshot."
virtual_machine,9098427,Controlling access to groups of memory pages in a virtualized environment,"Embodiments of an invention for controlling access to groups of memory pages in a virtualized environment are disclosed. In one embodiment, a processor includes a virtualization unit and a memory management unit. The virtualization unit is to transfer control of the processor to a 
virtual machine
. The memory management unit is to perform, in response to an attempt to execute on the 
virtual machine
 an instruction stored on a first page, a page walk through a paging structure to find a second page and to allow access to the second page without exiting the 
virtual machine
 based at least in part on a bit being set in a leaf level entry corresponding to the second page in the paging structure and a corresponding bit being set in each entry corresponding to the first page in each level of the paging structure."
virtual_machine,9098347,"Implementation of 
virtual machine
 operations using storage system functionality","One embodiment of the present invention includes a method comprising: (a) representing at least state data of a 
virtual machine
 in a unit of network storage of a network storage system; and (b) employing data manipulation functionality of the network storage system to implement a 
virtual machine
 operation that manipulates at least the state data of the 
virtual machine
."
virtual_machine,9354916,Detection of guest disk cache,"A 
virtual machine
 disk page detector running on a computing device detects guest disk cache usage. The detector detects a request from a virtual operating system to read an object into a virtual memory page from a virtual disk, maintains a record of a page identifier and a corresponding virtual disk address in a guest cache data structure, and modifies a protection identifier of the virtual memory page to indicate that the virtual memory page is protected."
virtual_machine,9098337,Scheduling virtual central processing units of virtual machines among physical processing units,"Embodiments of apparatus, computer-implemented methods, systems, and computer-readable media are described herein for a 
virtual machine
 monitor. The 
virtual machine
 monitor may be configured to determine whether to schedule a virtual central processing unit of one of a plurality of virtual machines on a first physical processing unit of a plurality of physical processing units. Each 
virtual machine
 may have one or more virtual central processing units. The determination may be based at least in part on whether a context of the virtual central processing unit suggests a desired cache hit rate on one or more cache units of the apparatus by the first physical processing unit when operating the virtual central processing unit."
virtual_machine,9098329,"**Please see images for: 
( Certificate of Correction ) 
**
 
Managing workflows","Systems and methods are disclosed that facilitate the selection of 
virtual machine
 instances to implement each action associated with a specified workflow. Workflows are configured and defined as a series of actions or processes that have various requirements. For each action in a specified workflow, a workflow management component can select 
virtual machine
 resources that are best suited to implement the specific action in accordance with the requirements of the action."
virtual_machine,9098325,Persistent volume at an offset of a virtual block device of a storage server,"Example embodiments disclosed herein relate to a persistent volume at an offset of a virtual block device of a storage server. Example embodiments include requesting that a persistent volume be dissociated from a virtual block device in response to the termination of a 
virtual machine
."
virtual_machine,9098324,Provisioning a pass-through disk in a virtualized computing environment,"A physical host machine determines that a storage device from a network storage system is available to the host machine as a pass-through disk. Virtualization software running on the host machine assigns the pass-through disk to a temporary resource group on the host machine. The pass-through disk is logically attached to the 
virtual machine
 running on the host machine and made available to an operating system and application running on the 
virtual machine
."
virtual_machine,9098323,"Simultaneous utilization of a first graphics processing unit (GPU) and a second GPU of a computing platform through a 
virtual machine
 (VM) in a shared mode and a dedicated mode respectively","A method includes executing a driver component on a hypervisor of a computing platform including a first graphics processing unit (GPU) and a second GPU, and executing an instance of the driver component in the VM. The method also includes providing support for hardware virtualization of the second GPU in the hypervisor and the instance of the driver component executing in the VM, defining a data path between the VM and the first GPU in a configuration register, and defining a data path between the VM and the second GPU in another configuration register. Further, the method includes providing a capability to the VM to utilize the first GPU in a shared mode with one or more other VM(s) and to simultaneously dedicatedly utilize the second GPU based on reading exposed emulated versions of the configuration register and the another configuration register and the support for the hardware virtualization."
virtual_machine,9098322,Managing a server template,"A non-transitory computer-readable storage medium may comprise instructions for managing a server template stored thereon. When executed by at least one processor, the instructions may be configured to cause at least one computing system to at least convert the server template to a corresponding 
virtual machine,
 manage the corresponding 
virtual machine,
 and convert the corresponding 
virtual machine
 back into a template format."
virtual_machine,9098321,"Method and computer for controlling 
virtual machine","A 
virtual machine
 booting method for booting a 
virtual machine, the virtual machine
 comprising: a physical computer which includes a processor, a memory, and storage; and a virtualization module which assigns computer resources of the physical computer to the 
virtual machine,
 the method comprising: setting, by the virtualization module, before the 
virtual machine
 is booted, states of a first access path and a second access path which couple the 
virtual machine
 and the storage; booting the 
virtual machine
 by the virtualization module; determining, by the virtualization module, when to switch between the first access path and the second access path; and switching the first access path to the second access path when the virtualization module determines that it is time to switch between the first access path and the second access path."
virtual_machine,9098309,Power consumption optimized translation of object code partitioned for hardware component based on identified operations,"In the various aspects, a 
virtual machine
 operating at the machine layer may use power consumption models to partition object code into portions, identify the relative power efficiencies of the mobile device processors for the various code portions, and route the code portions to the mobile device processors that can perform the operations using the least amount of energy. A dynamic binary translator process may translate the object code portions into an instruction set language supported by the hardware component identified as being preferred. The code portions may be executed and the amount of power consumed may be measured, with the measurements used to generate and/or"
virtual_machine,9098214,"Managing 
virtual machine
 migration","Systems and method for the management of migrations of 
virtual machine
 instances are provided. A migration manager monitors the resource usage of a 
virtual machine
 instance over time in order to create a migration profile. When migration of a 
virtual machine
 instance is desired, the migration manager schedules the migration to occur such that the migration conforms to the migration profile."
virtual_machine,9094420,"**Please see images for: 
( Certificate of Correction ) 
**
 
System and method for assuring quality real-time communication experience in 
virtual machine","Method to provide SIP session management of a real-time communication to a softphone client in a 
virtual machine,
 including: accepting an invitation to join a SIP session; receiving, by a server-based softphone in the SIP session, a real-time communication that is encoded with at least one SIP session aspect; transmitting the real-time communication and the at least one SIP session aspect to a client-based softphone; and using the at least one SIP session aspect for SIP session management."
virtual_machine,9354913,Key input processing in virtualized computing environment,"An example method is provided to process an input in a virtualized computing environment. The virtualized computing environment may include a physical machine running a host operating system and a virtualization software with one or more virtual machines. The example method may include detecting activation of at least one key input that causes a first message to be generated, the first message associated with the key input, comparing the first message with a set of stored messages, wherein any of the set of stored messages can be properly executed by targets in both the host operating system and the 
virtual machine
 but with different responses, and determining, based on the comparing, whether the first message is intended for a target in the host operating system or in the 
virtual machine
."
virtual_machine,9094351,Implicit and dynamic receive queue assignment in virtualized systems,"A system and method are disclosed for assigning incoming packets to receive queues of a 
virtual machine
. In accordance with one embodiment, a hypervisor that is executed by a computer system receives a request from a 
virtual machine
 to transmit an outgoing packet to a destination, and an identification of a receive queue of a plurality of receive queues of the 
virtual machine,
 where the identification of the receive queue is provided to the hypervisor by the 
virtual machine
 along with the request. The hypervisor obtains a flow identifier from a header of the outgoing packet that identifies a flow associated with the outgoing packet, and the outgoing packet is transmitted to the destination. The computer system then receives an incoming packet whose header specifies the flow identifier, and the hypervisor inserts the incoming packet into the receive queue using the identification of the receive queue."
virtual_machine,9094302,"System and method to discover 
virtual machine
 instantiations and configure network service level agreements","A method includes establishing a connectivity fault management (CFM) management domain that includes a host processing system and a network element, determining that a media access control (MAC) address of the host processing system is associated with a network service level agreement (SLA), issuing a CFM frame to the management domain, receiving the CFM frame, and configuring the network element according to the network SLA."
virtual_machine,9094292,"**Please see images for: 
( Certificate of Correction ) 
**
 
Method and system for providing access to computing resources","A graphical user interface may be used to display a plurality of computing resources which are provisioned across at least one cloud provider and/or at least one data center, where the plurality of computing resources may implement a 
virtual machine,
 a plurality of virtual machines of a cloud computing environment, etc. In response to a selection of the computing resources using the graphical user interface, the plurality of computing resources may be launched and/or configured on the at least one cloud provider and/or at least one data center which provide the computing resources. Access to the plurality of computing resources may then be provided using the graphical user interface."
virtual_machine,9094210,Systems and methods to secure a virtual appliance,"The present disclosure relates to systems and methods for providing secure support to virtual appliances delivered to customer sites without passwords or enabled ports for service. A virtual appliance may be established on a first device. The virtual appliance may comprise a self-contained 
virtual machine
 with a pre-installed operating system and may be established with no root password enabled and a remote access port disabled. An administration tool may receive from a requestor a request to enable maintenance for the virtual appliance. The administration tool may generate, responsive to the request, a random password. The administration tool may enable, responsive to the request, the remote access port. The virtual appliance may wait for a connection to the remote access port for a predetermined period of time. The administration tool may transmit the random password to a service of a second device remote to the first device."
virtual_machine,9092837,Use of snapshots to reduce risk in migration to a standard virtualized environment,"During a process of migrating a source system into a standardized virtual environment, 
virtual machine
 instances of the source system executing in a hypervisor are snapshotted as 
virtual machine
 images in an operational repository of the hypervisor. The 
virtual machine
 images in the operational repository are short-term snapshots. From time to time during the migration process, long-term snapshots of the source system are created by checking given ones of the 
virtual machine
 images from the hypervisor operational repository into an image library as image objects."
virtual_machine,9092625,"Micro
-virtual machine
 forensics and detection","The execution of a process within a VM may be monitored, and when a trigger event occurs, additional monitoring is initiated, including storing behavior data describing the real-time events taking place inside the VM. This behavior data may then be compared to information about the expected behavior of that type of process in order to determine whether malware has compromised the VM. The trigger event may be analyzed in relation to a set of heuristics, and based on the analysis, a data collection process may be initiated wherein the data comprises information about events occurring in the first 
virtual machine
."
virtual_machine,9092376,"Methods and systems for ordering 
virtual machine
 snapshots","Techniques are described herein which minimize the impact of 
virtual machine
 snapshots on the performance virtual machines and hypervisors. In the context of a volume snapshot which may involve (i) taking 
virtual machine
 snapshots of all virtual machines associated with the volume, (ii) taking the volume snapshot, and (iii) removing all the 
virtual machine
 snapshots, the 
virtual machine
 snapshots may be created in a first order and removed in a second order. Specifically, snapshots for busy virtual machines (i.e., virtual machines with higher disk write activity) may be created last and removed first. Consequently, snapshots of busy virtual machines are retained for the shorter periods of time, thereby minimizing the effect of 
virtual machine
 snapshots on those virtual machines (and their associated hypervisors) that would be most negatively impacted by 
virtual machine
 snapshots."
virtual_machine,9092369,Tracking specific Java native interface invocations of system and library calls,"Methods and systems may track the invocation path of a system or a library call from Java native interface (JNI) in Java applications. A native call of interest having an associated failure condition, an invocation path associated with the native call of interest, and a Java boundary crossover method (Java method invoking a JNI method) within the invocation path may all identified based on failure diagnostic information. The identified information may also be fed to a Java 
virtual machine
 (JVM). When the application is re-run, a check can be made prior to execution of the JNI method, as to whether the Java boundary crossover method is being executed. If so, then the execution stack may be compared to the invocation path of interest."
virtual_machine,9092341,Methods of cache preloading on a partition or a context switch,"A scheme referred to as a ""Region-based cache restoration prefetcher"" (RECAP) is employed for cache preloading on a partition or a context switch. The RECAP exploits spatial locality to provide a bandwidth-efficient prefetcher to reduce the ""cold"" cache effect caused by multiprogrammed virtualization. The RECAP groups cache blocks into coarse-grain regions of memory, and predicts which regions contain useful blocks that should be prefetched the next time the current 
virtual machine
 executes. Based on these predictions, and using a simple compression technique that also exploits spatial locality, the RECAP provides a robust prefetcher that improves performance without excessive bandwidth overhead or slowdown."
virtual_machine,9092274,Acceleration for virtual bridged hosts,"An approach is provided in which a hardware accelerated bridge executing on a network adapter receives an ingress data packet. The data packet includes a destination MAC address that corresponds to a 
virtual machine,
 which interfaces to a software bridge executing on a hypervisor. The hardware accelerated bridge identifies a software bridge table entry that includes the destination MAC address and a virtual function identifier, which identifies a virtual function corresponding to the software bridge. In turn, the hardware accelerated bridge sends the data packet from the hardware accelerated bridge to the software bridge through the identified virtual function."
virtual_machine,9354910,Method for certification of reconfigurable radio equipment when reconfiguration software developed by third party,"A radio equipment comprises waveform generator to receive input data and to generate output baseband waves corresponding to the received input data, and a radio-frequency component to transform the baseband waves generated in radio waves. The waveform generator comprises a Radio 
Virtual Machine
 (RVM) that has been compiled to operate on hardware underlying the RVM. The RVM comprises an associated RVM class that establishes a level of reconfigurability of low-level parameters of the RVM. The RVM class comprises one of a plurality of RVM classes in which each RVM class comprises a corresponding level of reconfigurability of low-level RVM parameters and a corresponding level of certification testing for reconfigured RVMs of the class. In one exemplary embodiment, the plurality of RVM classes comprises at least one RVM class comprising full reconfigurability of low-level RVM parameters and at least one RVM class comprising limited reconfigurability of low-level RVM parameters."
virtual_machine,9092269,"Offloading 
virtual machine
 flows to physical queues","The present invention extends to methods, systems, and computer program products for offloading 
virtual machine
 flows to physical queues. A computer system executes one or more virtual machines, and programs a physical network device with one or more rules that manage network traffic for the virtual machines. The computer system also programs the network device to manage network traffic using the rules. In particular, the network device is programmed to determine availability of one or more physical queues at the network device that are usable for processing network flows for the virtual machines. The network device is also programmed to identify network flows for the virtual machines, including identifying characteristics of each network flow. The network device is also programmed to, based on the characteristics of the network flows and based on the rules, assign one or more of the network flows to at least one of the physical queues."
virtual_machine,9092252,"Information processing apparatus, client management system, and client management method","According to one embodiment, in response to a connection request from a second 
virtual machine
 corresponding to a second client terminal on which a first user has newly executed a logon operation, an information processing apparatus determines whether a first user profile associated with a first identifier of the first user is being used by another client terminal. If the first user profile is being used, the apparatus causes a first 
virtual machine
 corresponding to the another client terminal to unmount the first storage location, and transmits the information indicative of the path to the first storage location to a second 
virtual machine
 corresponding to the second client terminal."
virtual_machine,9092251,"Method of managing virtual machines using a 
virtual machine
 monitor","A method for managing virtual machines, the method comprising providing a virtual Advanced Configuration and Power Interface, ACPI, arranged to interact with the virtual machines, and interacting with a real ACPI based on interaction between the virtual ACPI and the plurality of virtual machines."
virtual_machine,9092249,Remote rendering of three-dimensional images using virtual machines,"Remote rendering of three-dimensional images using virtual machines includes using a hypervisor executing on a physical computer to allocate exclusive and direct access to a graphics processing unit in the physical computer, to a first 
virtual machine
. An agent executing on a second 
virtual machine
 intercepts three-dimensional draw commands generated by a three-dimensional application and forwards the intercepted draw commands to a rendering agent executing on the first 
virtual machine
. The rendering agent then transmits the intercepted draw commands to the graphics processing unit for rendering upon which the graphics processing unit renders a three-dimensional image from the draw commands. The rendering agent obtains the rendered image from the graphics processing unit and forwards the image to the second 
virtual machine
. Upon receiving the rendered image, the second 
virtual machine
 transmits the rendered image to another remote, physical computer where the rendered image is displayed to a user."
virtual_machine,9092248,Systems and methods for restoring distributed applications within virtual data centers,"A computer-implemented method for restoring distributed applications within virtual data centers may include (1) receiving a request to restore a distributed application that includes at least one 
virtual machine
 to a virtual data center, (2) identifying a backup of the 
virtual machine
 stored within backup storage, (3) exposing the backup of the 
virtual machine
 stored within the backup storage to a hypervisor, (4) regenerating the 
virtual machine
 by accessing the backup of the 
virtual machine
 at the backup storage, (5) adding the 
virtual machine
 to the distributed application, and (6) restoring, before completely recovering the 
virtual machine
 from the backup storage to the datastore of the virtual data center, the distributed application by starting the 
virtual machine
 as part of the distributed application. Various other methods, systems, and computer-readable media are also disclosed."
virtual_machine,9092161,"Selection of allocation policy and format for 
virtual machine
 disk images","A system and method are disclosed for selecting an allocation policy and format for storing a disk image of a 
virtual machine
 (VM). In accordance with one embodiment, a computer system that hosts a 
virtual machine
 (VM) selects an allocation policy and format for storing the disk image on a particular storage device (e.g., a magnetic hard disk, a Universal Serial Bus [USB] solid state drive, a Redundant Array of Independent Disks [RAID] system, a network attached storage [NAS] array, etc.), where the selection is based on one or more capabilities of the storage device, and on a parameter that indicates a tradeoff between performance and storage consumption."
virtual_machine,9088618,System and methods for ensuring fault tolerance of antivirus protection realized in a virtual environment,"Disclosed are systems and methods for ensuring fault tolerance of antivirus protection realized in a virtual environment. An example method includes collecting, by a antivirus agent in a 
virtual machine,
 information about available security virtual machines that provide at least one or more resource-intensive methods of antivirus checking of programs running on the 
virtual machine
; analyzing the collected information to determine a location of the 
virtual machine
 relative to the security virtual machines and determine priorities for each of the security virtual machines based on the location of the 
virtual machine
 relative; forming a list of the available security virtual machines according to the priorities of the security virtual machines to identify a primary security 
virtual machine
; connecting the 
virtual machine
 to the primary security 
virtual machine
; and requesting the primary security 
virtual machine
 to perform at least antivirus checking of one or more programs running on the 
virtual machine
."
virtual_machine,9088524,Switch with network services packet processing,"Virtual machine
 environments are provided in the switches that form a network, with the virtual machines executing network services previously performed by dedicated appliances. The virtual machines can be executed on a single multi-core processor in combination with normal switch functions or on dedicated services processor boards. Packet processors analyze incoming packets and add a services tag containing services entries to any packets. Each switch reviews the services tag and performs any network services resident on that switch. This allows services to be deployed at the optimal locations in the network. The network services may be deployed by use of drag and drop operations. A topology view is presented, along with network services that may be deployed. Services may be selected and dragged to a single switch or multiple switches. The management tool deploys the network services software, with virtual machines being instantiated on the switches as needed."
virtual_machine,9087308,System and method for conducting competitions,"In general, in one aspect, a method for developing an asset by competition includes installing and configuring a master software environment for development or testing, and saving a copy of the master software environment as a virtual image suitable for use with a 
virtual machine
. The method also includes receiving indicia of interest in a competition from a competitor, allocating a virtual server to the competitor and configuring the allocated virtual server with a copy of the virtual image, and providing access information for the virtual server to the competitor, thereby facilitating use of the virtual server by the competitor during the competition."
virtual_machine,9087076,Automated filer technique for use in virtualized appliances and applications,"Various techniques are disclosed for facilitating manipulation of virtualized storage volumes and/or file systems of one or more different types of operating systems (OSs) implemented on distributed computer systems. According to different embodiments, various aspects may be directed to different embodiments of virtualized filer appliances and/or filer applications which may be used for facilitating manipulation of virtualized storage volumes and/or file systems of one or more different types of operating systems (OSs) implemented on distributed computer systems. In at least one embodiment, a filer appliance may be implemented as a virtual appliance that includes functionality for performing automated file-level and/or volume-level operations for a selected set of file systems. In one embodiment, a filer appliance may be implemented as a 
virtual machine
 which is configured or designed to handle managing of one or more volumes. In one embodiment, the filer appliance may include one or more virtual interfaces for interfacing with one or more virtual volumes and/or one or more other virtual appliances, virtual applications, etc. Various other techniques are disclosed herein for facilitating dynamic and automated configuration of virtual appliances implemented at distributed computing systems."
virtual_machine,9354909,Processing systems and methods,"Example processing systems and methods are described. In one implementation, a method receives a request to perform a processing operation. The method identifies a first task associated with the processing operation and identifies a second task associated with the processing operation. A first 
virtual machine
 is invoked to perform the first task and a second 
virtual machine
 is invoked to perform the second task. The first and second virtual machines each execute an instance of a browser application to perform the first and second tasks, respectively."
virtual_machine,9087005,Increasing resiliency of a distributed computing system through lifeboat monitoring,"A method and associated systems for increasing resiliency of a distributed computing system. A processor creates a first 
virtual machine
 and a second 
virtual machine,
 each of which monitor the other. When the first 
virtual machine
 identifies that the second 
virtual machine
 has become unavailable or is otherwise compromised, the first 
virtual machine
 automatically requests that a system-management entity restart the unavailable machine. If a certain number of restart attempts fails to restore the second 
virtual machine
 to desired functionality, the first 
virtual machine
 automatically requests that the system-management entity recreate or reprovision the second 
virtual machine
 from a prior backup. If a certain number of such recreations or reprovisionings attempts fails, a system administrator is automatically notified that further action is needed."
virtual_machine,9086924,Executing a distributed java application on a plurality of compute nodes,"Methods, systems, and products are disclosed for executing a distributed JAVA application on a plurality of compute nodes. The JAVA application includes a plurality of jobs distributed among the plurality of compute nodes. The plurality of compute nodes are connected together for data communications through a data communication network. Each of the plurality of compute nodes has installed upon it a JAVA 
Virtual Machine
 (`JVM`) capable of supporting at least one job of the JAVA application. Executing a distributed JAVA application on a plurality of compute nodes includes: tracking, by an application manager, JVM environment variables for the JVMs installed on the plurality of compute nodes; and configuring, by the application manager, the plurality of jobs for execution on the plurality of compute nodes in dependence upon the JVM environment variables for the JVMs installed on the plurality of compute nodes."
virtual_machine,9086922,Opportunistically scheduling and adjusting time slices,"Computerized methods, computer systems, and computer-readable media for governing how virtual processors are scheduled to particular logical processors are provided. A scheduler is employed to balance a load imposed by virtual machines, each having a plurality of virtual processors, across various logical processors (comprising a physical machine) that are running threads in parallel. The threads are issued by the virtual processors and often cause spin waits that inefficiently consume capacity of the logical processors that are executing the threads. Upon detecting a spin-wait state of the logical processor(s), the scheduler will opportunistically grant time-slice extensions to virtual processors that are running a critical section of code, thus, mitigating performance loss on the front end. Also, the scheduler will mitigate performance loss on the back end by opportunistically de-scheduling then rescheduling a 
virtual machine
 in a spin-wait state to render the logical processor(s) available for other work in the interim."
virtual_machine,9086921,Dynamic database memory management according to swap rates,"Memory of a database management system (DBMS) that is running in a virtual or physical machine is managed using techniques that that reduce the effect of memory swaps on the performance of the physical or 
virtual machine
. One such technique includes the steps of determining a swap rate while the database application is in an executing state, and decreasing the size of memory space available to the database application if the swap rate is above a threshold."
virtual_machine,9086917,"**Please see images for: 
( Certificate of Correction ) 
**
 
Registering and accessing virtual systems for use in a managed system","Techniques are disclosed for controlling and managing virtual machines and other such virtual systems. VM execution approval is based on compliance with policies controlling various aspects of VM. The techniques can be employed to benefit all virtual environments, such as virtual machines, virtual appliances, and virtual applications. For ease of discussion herein, assume that a 
virtual machine
 (VM) represents each of these environments. In one particular embodiment, a systems management partition (SMP) is created inside the VM to provide a persistent and resilient storage for management information (e.g., logical and physical VM metadata). The SMP can also be used as a staging area for installing additional content or agentry on the VM when the VM is executed. Remote storage of management information can also be used. The VM management information can then be made available for pre-execution processing, including policy-based compliance testing."
virtual_machine,9086913,Processor extensions for execution of secure embedded containers,"Methods and apparatus relating to processor extensions for execution of secure embedded containers are described. In an embodiment, a scalable solution for manageability function is provided, e.g., for UMPC environments or otherwise where utilizing a dedicated processor or microcontroller for manageability is inappropriate or impractical. For example, in an embodiment, an OS (Operating System) or VMM (
Virtual Machine
 Manager) Independent (generally referred to herein as ""OI"") architecture involves creating one or more containers on a processor by dynamically partitioning resources (such as processor cycles, memory, devices) between the HOST OS/VMM and the OI container. Other embodiments are also described and claimed."
virtual_machine,9086907,"Apparatus and method for managing 
virtual machine
 addresses","According to one embodiment, an apparatus is configured to carry out a 1st 
virtual machine
 and a 2nd 
virtual machine
. The 1st 
virtual machine
 includes a notifying module configured to notify a 1st port number to the 2nd 
virtual machine,
 and a 1st transmitter configured to transmit, to a network, a 1st packet including a source port number indicating port number other than the 1st port number. The 2nd 
virtual machine
 includes a 2nd transmitter configured to transmit, to the network, a 2nd packet including a source port number indicating the 1st port number. The apparatus includes a sorting module configured to sort a received packet to the 1st 
virtual machine
 or the 2nd 
virtual machine
."
virtual_machine,9086906,"Apparatus and method for guest and root register sharing in a 
virtual machine",A computer readable storage medium includes executable instructions to define a processor with guest mode control registers supporting guest mode operating behavior defined by guest context specified in the guest mode control registers. The guest mode control registers include a control bit to specify a guest access blocked register state and a shared register state. Root mode control registers support root mode operating behavior defined by root context specified in the root mode control registers. The root mode control registers include control bits to enable replicated register state access and shared register state access. The guest context and the root context support virtualization of hardware resources such that multiple operating systems supporting multiple applications are executed by the hardware resources.
virtual_machine,9086904,"Live migration of 
virtual machine
 during direct access to storage over SR IOV adapter","A method is provided to migrate a 
virtual machine
 from a source computing machine to a destination computing machine comprising: suspending transmission of requests from a request queue disposed in source computing machine memory associated with the VM from the request queue to a VF; while suspending the transmission of requests, determining when no more outstanding responses to prior requests remain to be received; in response to a determination that no more outstanding responses to prior requests remain to be received, transferring state information that is indicative of locations of requests inserted to the request queue from the VF to a PF and from the PF to a memory region associated with a virtualization intermediary of the source computing machine. After transferring the state information to source computing machine memory associated with a virtualization intermediary, resuming transmission of requests from locations of the request queue indicated by the state information to the PF; and transmitting the requests from the PF to the physical storage."
virtual_machine,9086902,Sending tasks between virtual machines based on expiration times,"In an embodiment, if an estimated time to perform a task by a first 
virtual machine
 is less than or equal to an expiration time of the first 
virtual machine
 minus the current time, the task is performed by the first 
virtual machine
. If the estimated time to perform the task by the first 
virtual machine
 is greater than the expiration time of the first 
virtual machine
 minus the current time, a selected 
virtual machine
 is selected from among a plurality of virtual machines with a smallest estimated time to perform the task and a request to perform the task is sent to the selected 
virtual machine
."
virtual_machine,9354908,Instantly restoring virtual machines by providing read/write access to virtual disk before the virtual disk is completely restored,"A computer-implemented method for instantly restoring virtual machines in high input/output load environments may include (1) identifying a hypervisor that is configurable to maintain simultaneous connections to multiple datastores of a network-attached-storage system, (2) receiving a request to activate a new 
virtual machine
 on the hypervisor, (3) determining a usage of at least one connection from the hypervisor to at least one datastore of the network-attached-storage system, and (4) selecting, based on the usage of the connection, a designated connection from the hypervisor to a designated datastore of the network-attached storage system for use by the new 
virtual machine
 to store data on the network-attached-storage system. Various other methods, systems, and computer-readable media are also disclosed."
virtual_machine,9086901,Migration of applications from physical machines to virtual machines,"Methods and apparatus, including computer program products, are provided for migrating applications from a physical machine to virtualization technology, such as virtual machines. In one aspect, there is provided a computer-implemented method. The method may include receiving, from an agent, information representative of at least one of an application or an operating system at a processor. An image may be created based on the received information. The image may provide a 
virtual machine
 including an application. The created image may be provided to a storage device. A virtualization manager may access the storage device and load the created image to implement a 
virtual machine
 including the application. Related apparatus, systems, methods, and articles are also described."
virtual_machine,9086897,Method and architecture for virtual desktop service,"The present invention relates to a method and an architecture capable of efficiently providing a virtual desktop service. The service architecture for the virtual desktop service includes a connection broker for performing the management of virtual machines, a server monitoring function, and a protocol coordination function. A resource pool is configured to manage software resources that are transferred to a specific 
virtual machine
 in a streaming form at a predetermined time and that are executed on the specific 
virtual machine
 and to provide provision information about the managed software resources at the request of the connection broker, in order to provide an on-demand virtual desktop service. A 
virtual machine
 infrastructure is configured to support hardware resources, generate virtual machines in which the software of the user terminal is operated, and provide the virtual machines as virtual desktops."
virtual_machine,9083604,"Information processing apparatus, client management system, and client management method","According to one embodiment, an apparatus includes a client management module configured to manage first information which correlates with client terminal information, group information, and type information, the client terminal information indicating a client terminal, the group information indicating a group to which the client terminal belongs, and the type information indicating whether the client terminal is a client virtualization terminal that executes a 
virtual machine
 or a thin client terminal, a user management module configured to manage second information which correlates with a user account and the group information, and a group management module configured to manage third information, which correlates with the group information and a virtual image file."
virtual_machine,9081989,System and method for secure cloud computing,"In a method for secure cloud computing, a 
virtual machine
 (VM) associated with a client is executed at a computer within a trusted computing cloud. An image including state information of the VM is obtained; storage of the image is arranged; a freshness hash of the image is determined; and the freshness hash is sent to the client. Subsequently, at the same computer or at a different computer within the trusted computing cloud, the stored image may be retrieved; a freshness hash of the retrieved image may be determined; the freshness hash of the retrieved image may be sent to the client; and an indication may be received from the client verifying the integrity of the freshness hash of the stored image."
virtual_machine,9081941,Virtual machine,"The present invention is directed to various systems and/or methods relating to a software platform that provides for authentication of a requestor. Preferably, this authentication happens before there is an opportunity for any resource intensive request to harm operation of the system. Preferably, a reliability level is based on authentication so that the amount and/or type of resource access is controlled based, at least in part, on the authentication information. Preferably, heap usage is controlled by this reliability level. Preferably, the software platform is a 
virtual machine,
 preferably the Java 
Virtual Machine
."
virtual_machine,9081788,Customizable file-type aware cache mechanism,"A caching mechanism is provided in a computer server system including at least one host coupled to at least one disk, one or more virtual machines, one or more images of the one or more virtual machines created in a file system of the disk, and a 
virtual machine
 manager for assigning hardware resources of the computer server system to the one or more virtual machines. The mechanism provides a masking cache layer between the one or more virtual machines and the 
virtual machine
 manager, the masking cache layer including at least one separate entry for every cacheable data block of the file system to be referenced, collects profiling information related to one or more of the cacheable data blocks (58) and stores the profiling information in the masking cache layer and configures the masking cache layer according to the profiling information, or provides a configuration for the masking cache layer."
virtual_machine,9081787,Customizable file-type aware cache mechanism,"A caching mechanism is provided in a computer server system including at least one host coupled to at least one disk, one or more virtual machines, one or more images of the one or more virtual machines created in a file system of the disk, and a 
virtual machine
 manager for assigning hardware resources of the computer server system to the one or more virtual machines. The mechanism provides a masking cache layer between the one or more virtual machines and the 
virtual machine
 manager, the masking cache layer including at least one separate entry for every cacheable data block of the file system to be referenced, collects profiling information related to one or more of the cacheable data blocks (58) and stores the profiling information in the masking cache layer and configures the masking cache layer according to the profiling information, or provides a configuration for the masking cache layer."
virtual_machine,9081757,Systems and methods for tracking and ,Systems and methods for locally managing a user s interaction with content derived from web pages along with the tracking of the creation and
virtual_machine,9081722,Systems and methods for improving performance of remote USB storage,"Methods and systems described herein facilitate improving universal serial bus (USB) storage performance in remote computing environments. A virtual USB host is associated with a 
virtual machine
 running a guest operating system (OS) and is configured to communicate with a USB storage device that is connected to a remote terminal. The virtual USB host is further configured to transmit one of a data-in request to the USB storage device before the guest OS transmits the data-in request or an acknowledgement of a data-out request to the guest OS before the USB storage device transmits the acknowledgement."
virtual_machine,9081682,"Virtual machine
 installation image caching","The subject matter of this specification can be implemented in, among other things, a computer-implemented method including sending, from a virtual desktop server manager at a data center and over a network, at least one request to a 
virtual machine
 storage domain for 
virtual machine
 installation images. The 
virtual machine
 storage domain stores the 
virtual machine
 installation images separate from the data center. The method further includes receiving, from the 
virtual machine
 storage domain over the network, the 
virtual machine
 installation images. The method further includes caching the 
virtual machine
 installation images in a data storage domain within the data center. The method further includes receiving a request to present a list of the 
virtual machine
 installation images. The method further includes in response to receiving the request to present the list, presenting the list of the cached 
virtual machine
 installation images."
virtual_machine,9354907,"Optimized restore of 
virtual machine
 and virtual disk data","Various systems and methods for restoring a 
virtual machine and virtual machine
 data. For example, one method can involve receiving a request to restore the 
virtual machine and virtual machine
 data. The 
virtual machine
 data can include part or all of a virtual disk associated with the 
virtual machine
. Both the 
virtual machine and the virtual machine
 data are stored in one or more backup storage devices. In response to the request, the 
virtual machine
 is restored from the backup storage device to a local storage device, and restoration of the 
virtual machine
 data is initiated. While the 
virtual machine
 data is being migrated from backup to local storage, I/O requests are received and processed. Processing the I/O request can involve performing the I/O requests to both the backup storage device and the local storage device."
virtual_machine,9081621,"Efficient input/output-aware multi-processor 
virtual machine
 scheduling","Computerized methods, computer systems, and computer-readable media for governing how virtual processors are scheduled to particular logical processors are provided. A scheduler is employed to balance a CPU-intensive workload imposed by virtual machines, each having a plurality of virtual processors supported by a root partition, across various logical processors that are running threads and input/output (I/O) operations in parallel. Upon measuring a frequency of the I/O operations performed by a logical processor that is mapped to the root partition, a hardware-interrupt rate is calculated as a function of the frequency. The hardware-interrupt rate is compared against a predetermined threshold rate to determine a level of an I/O-intensive workload being presently carried out by the logical processor. When the hardware-interrupt rate surpasses the predetermined threshold rate, the scheduler refrains from allocating time slices on the logical processor to the virtual machines."
virtual_machine,9081617,Provisioning of virtual machines using an N-ARY tree of clusters of nodes,"Various systems and methods for management and provisioning of virtual machines are disclosed. This invention may be used, e.g., in conjunction with clusters of nodes that are potentially capable of hosting one or more virtual machines. In one aspect of this invention, the nodes may rank themselves, or be ranked, based on their ability to support a requested 
virtual machine
 configuration. Each of the clusters may also be ranked based on, for example, the aggregate ranks of the nodes within that cluster. After the nodes and/or clusters have been ranked, a cluster and/or a node may be selected to host the 
virtual machine, and the virtual machine
 may be provisioned on that cluster and/or node."
virtual_machine,9081612,"Virtual machine
 control method and 
virtual machine","A 
virtual machine
 control method and a 
virtual machine
 having the dual objectives of utilizing NIC on a 
virtual machine
 that creates sub-virtual machines operated by a VMM on virtual machines generated by a hypervisor to avoid software copying by the VMM and to prevent band deterioration during live migration or adding sub-virtual machines. In a 
virtual machine
 operating plural virtualization software on a physical machine including a CPU, memory, and multi-queue NIC; a virtual multi-queue NIC is loaded in the 
virtual machine,
 for virtual queues included in the virtual multi-queue NIC, physical queues configuring the multi-queue NIC are assigned to virtual queues where usage has started, and the physical queues are allowed direct access to the 
virtual machine
 memory."
virtual_machine,9081604,Automatic discovery of externally added devices,"An exemplary system may automatically discovery externally added devices. In one embodiment, the system obtains initial device information for a 
virtual machine
 running on a host computing system. The system determines whether an external event occurred on the host computing system. A management computing system associated with the host computing system does not receive notification of the external event. Upon determining that the external event occurred on the host computing system, the system obtains"
virtual_machine,9081603,"Packet forwarding optimization with 
virtual machine
 mobility by comparing device identifiers to determine VM movement","In one embodiment, a method includes tracking at a network device in communication with a plurality of virtual machines, 
virtual machine
 movement based on a device identifier in a packet received from one of the virtual machines and storing location information for the 
virtual machine in a virtual machine
 move list at the network device. The location information from the 
virtual machine
 move list is inserted into a forwarding information base for use in optimized forwarding of packets destined for the 
virtual machine
. An apparatus and logic are also disclosed herein."
virtual_machine,9081602,"System and method for starting a cloud-based virtualization system with hypervisor and 
virtual machine
 monitor","A computing cloud comprising at least one computing node having a 
Virtual Machine
 (VM) running on a user level. A plurality of additional computing nodes, each node having a Hypervisor with the highest privilege level, a 
Virtual Machine
 Monitor (VMM) running with no higher privileges than the Hypervisor, and a plurality of Virtual Machines (VMs) running on a user level. Each node has a Primary operating system (POS) running within the one of its VMs. The POS has direct access to hardware devices of the corresponding computing node. The other VMs use the corresponding POS of its node to access the hardware devices."
virtual_machine,9081601,Virtual mobile infrastructure and its base platform,"A virtual mobile infrastructure (VMI) includes a base platform that has a plurality of hosts. On a host operation system (OS), a quick emulator (QEMU) process is used to virtualize at least one guest cell phone operating system. A data center manages these cell phone OSes generated by this base platform, allocates the OSes to users, and allows communication between cell phone client and server via mobile terminal protocol. A 
virtual machine
 (VM) switch contains a method to use the VMI, and to acquire adapted cell phone screen and inexpensive cell phone VM. A VMI product is able to encapsulate the third-party virtual desktop infrastructure (VDI) products (such as Citrix XenDesktop, LeoStream, etc.), henceforth to acquire screens from PC VM as well. Moreover, a VM manager allows administrators of enterprises to manage thousands of VMs."
virtual_machine,9081600,"Virtual machine
 validation","A system, method, and computer program product for providing validation of the compliance of a trusted host environment with a requirement of a 
virtual machine
 (VM). The system includes: a store component for cryptographically storing configuration data associated with the trusted host environment in at least one cryptographic data structure; a send component, responsive to the store component storing the configuration data, for sending the at least one cryptographic data structure to a control component; an analyze component, responsive to the control component receiving the at least one cryptographic data structure, for analyzing the at least one cryptographic data structure; a compare component, responsive to the analyze component determining the configuration data, for comparing the configuration data with the requirement; and a verify component, responsive to the compare component determining that the configuration data matches the requirement, for allowing verification of the VM."
virtual_machine,9081599,"Adjusting transfer rate of 
virtual machine
 state in 
virtual machine
 migration","Systems and methods for adjusting the rate of transmission of the execution state of a 
virtual machine
 undergoing live migration. An example method may comprise: determining, by a migration agent executing on a computer system, a first rate being a rate of change of an execution state of a 
virtual machine
 undergoing live migration from an origin host computer system to a destination host computer system; determining a second rate being a rate of transferring the execution state of the 
virtual machine
 from the origin host computer system to the destination host computer system; determining that a ratio of the first rate to the second rate exceeds a threshold convergence ratio; and reducing the rate of transferring the execution state of the 
virtual machine
 from the origin host computer system to the destination host computer system."
virtual_machine,9081597,Database change compensation after a transaction commit,"A virtualization manager receives a request to perform a command in a 
virtual machine
 system and executes a plurality of transactions associated with the command, each of the plurality of transactions comprising one or more operations executed on entities in the 
virtual machine
 system. The virtualization manager commits changes made to the entities in the 
virtual machine
 system as a result of the plurality of transactions to a management database for the 
virtual machine
 system. In addition, the virtualization manager generates a business entity snapshot corresponding to a first transaction of the plurality of transactions, the business entity snapshot comprising state information for one or more entities in the 
virtual machine
 system affected by the first transaction."
virtual_machine,9354906,Managing the eviction process,"Managing the guest operating system s eviction of memory pages from a 
virtual machine
. A guest operating system or a hypervisor may cause one or more memory pages within a guest physical frame to become unlikely or ineligible for selection as a candidate for eviction by the guest operating system. Each of the one or more memory pages may also reside, or be intended to reside, in the memory of one or more other virtual machines. In this way, memory pages that are shared across multiple virtual machines may become less likely to be evicted, thereby using memory more efficiently."
virtual_machine,9081596,"Information processing device, 
virtual machine
 creation method, and application distribution system","A device (110) according to an implementation of the present invention, having a plurality of virtual machines (1002, 1003, 1004, and 1005), includes a virtualization software (1001) which manages the virtual machines. The virtualization software includes an application VM creating unit (1300) which creates a 
virtual machine
 for executing a program. A first 
virtual machine
 (1002) determines whether a first program is to be executed on the first 
virtual machine
 or to be executed on a 
virtual machine
 other than the first 
virtual machine
. When the first 
virtual machine
 determines that the first program is to be executed on the other 
virtual machine,
 the application VM creating unit creates a second 
virtual machine
 for executing the first program."
virtual_machine,9081510,Background migration of virtual storage,"Described is a technology by which a virtual hard disk is migrated from a source storage location to a target storage location without needing any shared physical storage, in which a machine may continue to use the virtual hard disk during migration. This facilitates use the virtual hard disk in conjunction with live-migrating a 
virtual machine
. Virtual hard disk migration may occur fully before or after the 
virtual machine
 is migrated to the target host, or partially before and partially after 
virtual machine
 migration. Background copying, sending of write-through data, and/or servicing read requests may be used in the migration. Also described is throttling data writes and/or data communication to manage the migration of the virtual hard disk."
virtual_machine,9081507,Shared storage access management systems and methods,"Shared storage access management systems and methods are presented. A method can comprise: performing an endpoint I/O source authority tracking process in which permission of an endpoint I/O source to perform an I/O with at least a portion of an endpoint storage target is tracked at least in part based on a corresponding endpoint I/O source ID value, and performing an I/O operation based upon results of the endpoint I/O source authority tracking process. In one embodiment, the endpoint I/O source ID value is associated with an endpoint I/O source that is a 
virtual machine
. The endpoint I/O source ID value can be unique and can be bound to an endpoint I/O source. In one exemplary implementation, the endpoint I/O source ID value does not depend upon intermediate communication channel characteristics between a corresponding endpoint I/O source and endpoint storage target."
virtual_machine,9081502,Method and apparatus of storage volume migration in cooperation with takeover of storage area network configuration,"Systems and methods directed to the automation of Storage Area Network (SAN) configuration when storage volume migration or server 
virtual machine
 migration is conducted. Systems and methods described herein may involve the takeover of a SAN network attribute for the migration, and may involve translation of zone object formats to facilitate the migration and ensure compatibility when the takeover is conducted."
virtual_machine,9077665,Transferring virtual machines and resource localization in a distributed fault-tolerant system,"Virtual machine
 localization in a distributed fault-tolerant system. Network traffic is minimized between nodes, while maintaining fault-tolerant behavior. Communication is measured between VM s, which are moved to minimize real network use. An availability group defines which resources cannot safely be disposed on a single device. When two VM s are in the same availability group, they are disposed as near as practical, but not on the same device. VM s and other resources they use are also disposed to minimize real network use. Minimizing real network use includes minimizing both channels occupied and communication distance. Availability groups can include both ""hard"" availability groups, for which data could be irretrievably lost, or ""soft"" availability groups, for which data could be lost, but could still be recovered with difficulty. Resource localization responds to both distance between VM s and their resources, and risk associated with losing data."
virtual_machine,9077583,"System for provisioning, allocating, and managing virtual and physical desktop computers in a network computing environment","A system for provisioning, allocating, and managing virtual and physical desktop computers in an enterprise network computing environment allows for these physical and desktop computers to be grouped logically based on personnel, organizational, or networking efficiencies without regard to the hardware or server that will ultimately run the 
virtual machine
 terminal once it is accessed. A connection broker connects incoming connections to one desktop in a desktop group, based on information relating to that incoming connection."
virtual_machine,9076342,Automated execution and evaluation of network-based training exercises,"This disclosure generally relates to automated execution and evaluation of computer network training exercises, such as in a 
virtual machine
 environment. An example environment includes a control and monitoring system, an attack system, and a target system. The control and monitoring system initiates a training scenario to cause the attack system to engage in an attack against the target system. The target system then performs an action in response to the attack. Monitor information associated with the attack against the target system is collected by continuously monitoring the training scenario. The attack system is then capable of sending dynamic response data to the target system, wherein the dynamic response data is generated according to the collected monitor information to adapt the training scenario to the action performed by the target system. The control and monitoring system then generates an automated evaluation based upon the collected monitor information."
virtual_machine,9076017,Hardware virtualization module for exclusive controlled access to CPU,"In one embodiment, a method comprises providing an apparatus having exclusive access to each of one or more central processing units (CPUs) of a computing system and exclusive access to host resources of the computing system; and controlling, by the apparatus, execution of a 
virtual machine
 in the computing system based on the apparatus controlling access to any one of the CPUs or any one of the host resources according to prescribed policies for the 
virtual machine,
 the prescribed policies maintained exclusively by the apparatus."
virtual_machine,9076013,"**Please see images for: 
( Certificate of Correction ) 
**
 
Managing requests for security services","Embodiments of systems and methods are described for managing requests for security services to a provider of computing resources. In some implementations, a user can request that security services be provided to analyze or test a target network. For example, the user can request that security services conduct penetration testing of the target network in order to detect vulnerabilities with the target network s security infrastructure or configuration. The computing resource provider can dynamically provide the security services to the target network, for example, by instantiating one or more virtual machines that begin security testing of the target network in response to the user s request. In some embodiments, the provider of the security services may instantiate a security 
virtual machine
 instance (VMI) that can be connected to a customer s network using a secure connection, such as a virtual private network. The 
virtual machine
 instance can be physically located outside the customer s network while functioning as part of the customer s network. Thus, the security VMI can test security from either outside the network or from inside the network. In some embodiments, the VMI may test at multiple locations of the customer s network, for example, by establishing connections to multiple locations on the customer network."
virtual_machine,9075999,Memory device and method for adaptive protection of content,"A memory device and method for adaptive protection of content are disclosed. In one embodiment, a memory device is provided comprising a memory operative to store content and a controller in communication with the memory. The controller is operative to generate a content protection algorithm that is different from at least one content protection algorithm previously generated by the controller, protect the content in accordance with the content protection algorithm, generate 
virtual machine
 code containing instructions on how to unprotect the protected content, and provide the protected content and the 
virtual machine
 code to a host in communication with the memory device. In another embodiment, a method for adaptive protection of content is provided comprising generating a content protection algorithm that is different from at least one previously-generated content protection algorithm, protecting content in accordance with the content protection algorithm, generating 
virtual machine
 code containing instructions on how to unprotect the protected content, and providing the protected content and the 
virtual machine
 code to a host in communication with the memory device."
virtual_machine,9354905,"Migration of port profile associated with a target 
virtual machine
 to be migrated in blade servers","Each switch blade receives, from a CPU server serving as a migration destination to which a VM to be migrated is migrated, a setting request of port profile information corresponding to the VM. Then, each switch blade determines whether a VSI ID included in the received setting request is stored in a storage unit that stores therein the VSI ID identifying the VM. Subsequently, each switch blade executes processing according to the setting request when determining that the received VSI ID is stored in the storage unit. Furthermore, when determining that the received VSI ID is not stored in the storage unit, each switch blade forwards the setting request to an external switch that is an upper-level data relay device connected to the CPU server serving as the migration destination through the corresponding switch blade."
virtual_machine,9075731,Using transaction entries to achieve crash consistency when performing write-behind caching using a flash storage-based cache,"Techniques for achieving crash consistency when performing write-behind caching using a flash storage-based cache are provided. In one embodiment, a computer system receives from a 
virtual machine
 a write request that includes data to be written to a virtual disk and caches the data in a flash storage-based cache. The computer system further logs a transaction entry for the write request in the flash storage-based cache, where the transaction entry includes information usable for flushing the data from the flash storage-based cache to a storage device storing the virtual disk. The computer system then communicates an acknowledgment to the VM indicating that the write request has been successfully processed."
virtual_machine,9075690,Automatically and securely configuring and ,"An approach for automatically and securely uptated version of the software. With a proxy uptate server connected to a network and without the VM being connected to the network, the uptated version of the software is downloaded, stored and pushed to the VM by using a virtualized mounted drive, the uptated version is installed on the VM to replace the current version, and a confirmation indicating the installation is received. An uptate of the software is provided dynamically via a connectivity of the proxy uptate server to the network while the VM is prevented from being infected with a virus that requires a connection to the VM through the network."
virtual_machine,9075661,Placing objects on hosts using hard and soft constraints,"Objects are placed on hosts using hard constraints and soft constraints. The objects to be placed on the host may be many different types of objects. For example, the objects to place may include tenants in a database, virtual machines on a physical machine, databases on a 
virtual machine,
 tenants in directory forests, tenants in farms, and the like. When determining a host for an object, a pool of hosts is filtered through a series of hard constraints. The remaining pool of hosts is further filtered through soft constraints to help in selection of a host. A host is then chosen from the remaining hosts."
virtual_machine,9075649,Exposing a proprietary image backup to a hypervisor as a disk file that is bootable by the hypervisor,"Exposing a proprietary image backup to a hypervisor as a disk file that is bootable by the hypervisor. In one example embodiment, a method of exposing a proprietary image backup to a hypervisor as a disk file that is bootable by the hypervisor may include identifying the proprietary image backup having a proprietary format and storing an operating system, creating a plugin file corresponding to the proprietary image backup, reconfiguring the operating system to cause the operating system to be bootable when using hardware emulated by the hypervisor, gathering operating system data from the proprietary image backup, reformatting, using a filter module, the operating system data into a native format of the hypervisor, booting the operating system in a 
virtual machine
 of the hypervisor, and storing the reformatted operating system data in a replacement disk file formatted in the native format of the hypervisor."
virtual_machine,9075648,"**Please see images for: 
( Certificate of Correction ) 
**
 
Virtual machine
 switching based on measured network delay","Technologies related to 
virtual machine
 switching based on measured network delay are generally described. A network delay aware 
Virtual Machine
 (VM) may be configured to adapt a 
Virtual Machine
 Monitor (VMM) to delay switching back to the network delay aware VM by a delay amount determined using a measured network delay. The measured network delay may comprise a delay between sending a network communication and receiving a network response. By delaying switching back to the network delay aware VM, additional processing resources are freed for other VMs managed by the VMM, thereby increasing efficiency of computing devices including network delay aware VMs, and correspondingly increasing efficiency of data centers including such computing devices."
virtual_machine,9075645,Automatically selecting optimal transport protocol in a cloud computing environment,"A method, system and computer program product for selecting an optimal transport protocol in a cloud computing environment. An application creates a socket to communicate with a destination 
Virtual Machine
 (VM). The application requests a daemon agent to query a 
virtual machine
 manager to determine if the destination VM is on the same hypervisor as the application. The daemon agent receives a VMCI address (""context ID"") and an indication of the hypervisor associated with the destination VM from the 
virtual machine
 manager. The daemon agent enables the transport layer to route traffic over the VMCI protocol to the destination VM using its context ID in response to the destination VM being on the same hypervisor as the application. In this manner, the application is able to route traffic using an optimal transport protocol, including VMCI, depending on peer hypervisor association without requiring any code modifications to the application."
virtual_machine,9075644,Secure recursive virtualization,"A mechanism is provided for performing secure recursive virtualization of a computer system. A portion of memory is allocated by a 
virtual machine
 monitor (VMM) or an operating system (OS) to a new domain. An initial program for the new domain is loaded into the portion of memory. Secure recursive virtualization firmware (SVF) in the data processing system is called to request that the new domain be generated. A determination is made as to whether the call is from a privileged domain or a non-privileged domain. Responsive to the request being from a privileged domain, all access to the new domain is removed from any other domain in the data processing system. Responsive to receiving an indication that the new domain has been generated, an execution of the initial program is scheduled."
virtual_machine,9075643,Automatically selecting optimal transport protocol in a cloud computing environment,"A method, system and computer program product for selecting an optimal transport protocol in a cloud computing environment. An application creates a socket to communicate with a destination 
Virtual Machine
 (VM). The application requests a daemon agent to query a 
virtual machine
 manager to determine if the destination VM is on the same hypervisor as the application. The daemon agent receives a VMCI address (""context ID"") and an indication of the hypervisor associated with the destination VM from the 
virtual machine
 manager. The daemon agent enables the transport layer to route traffic over the VMCI protocol to the destination VM using its context ID in response to the destination VM being on the same hypervisor as the application. In this manner, the application is able to route traffic using an optimal transport protocol, including VMCI, depending on peer hypervisor association without requiring any code modifications to the application."
virtual_machine,9075641,Mobile devices having a plurality of virtual interfaces,"Mobile devices, systems and methods are described with a plurality of virtual machines, wherein each 
virtual machine
 executes a separate virtual interface, or guest operating system. Each guest operating system corresponds to a different virtual device having its own contact list, applications, and so on. A virtual ""device"" can be controlled by an employer or service provider, and is a secure space that provides authenticated applications that are walled off from another virtual device. A host operating system provides a hardware abstraction layer. A proxy server on the host operating system receives an incoming signal from a remote device on the external network, and routes the incoming signal to one of the first and second virtual machines based on a call context. A method and computer program product for providing a plurality of virtual interfaces on a mobile device are also disclosed."
hypervisor,9384035,"Virtual computer system, management computer, and virtual computer management method","A virtual computer system includes: a plurality of computers on which at least one virtual computer operates on a 
hypervisor
; and a management computer that manages the plurality of computers, wherein the management computer includes: an input unit that accepts an operation input of an operator; a screen generation unit that acquires, in a state where a first virtual computer operates on a first computer, progress information concerning a live migration in which the first virtual computer is transferred from the first computer to a second computer, the progress information being acquired from the first computer, that generates statistical information concerning the live migration on the basis of the acquired progress information, and that generates a statistics screen containing the statistical information; and an output unit that displays the statistics screen."
hypervisor,9369301,Overlay network capable of supporting storage area network (SAN) traffic,"In one embodiment, a system includes a server having a 
hypervisor
 layer that includes an overlay-capable virtual switch and a Fiber Channel (FC) virtual switch; at least one processor configured to execute logic; and a converge network adapter (CNA) coupled to the 
hypervisor,
 the CNA being configured to communicate with the overlay-capable virtual switch and the FC virtual switch, wherein the CNA is configured to communicate with a FC forwarder (FCF), and the overlay-capable virtual switch includes logic configured to communicate with a central controller. In another embodiment, a method for sending FCoE traffic over an overlay network includes receiving a block of media access control (MAC) addresses for use in local fabric initialization protocol (FIP) operations and advertising to all local FCoE initiators to route FCoE traffic to a server by asserting an overlay-capable virtual switch within the server as a FCF for any requesting FCoE initiators."
hypervisor,9256455,Delivery of events from a virtual machine to host CPU using memory monitoring instructions,"A method and system for managing a virtual computing system including a virtual machine (VM) configured to send an event to a host CPU executing a memory monitoring instruction. The virtual machine is configured to receive from a 
hypervisor
 a notification identifying an address range writeable by a virtual central processing unit (VCPU) associated with the virtual machine to send an event to a host central processing unit (CPU). The virtual machine is further configured to receive an instruction to write to the identified address range for sending an event to the host CPU. The VCPU of the virtual machine may then write data identifying an event for execution by the host CPU to the identified address range, without causing an exit to the 
hypervisor
."
hypervisor,9253157,Dynamically defining rules for network access,"Methods are provided for dynamically defining network access control rules. A placeholder for a parameter of an interface to an endpoint such as a data processing system or virtual machine may be provided in a network access control rule, instead of a static parameter. The parameter may be dynamically determined, by a firewall or a 
hypervisor
 for example, and the placeholder may be replaced with the dynamically determined parameter."
hypervisor,9253156,Dynamically defining network access rules,"Systems and computer program products are provided for dynamically defining network access control rules. A placeholder for a parameter of an interface to an endpoint such as a data processing system or virtual machine may be provided in a network access control rule, instead of a static parameter. The parameter may be dynamically determined, by a firewall or a 
hypervisor
 for example, and the placeholder may be replaced with the dynamically determined parameter."
hypervisor,9251090,"Hypervisor
 assisted virtual memory obfuscation","Remote computing resource service providers allow customers to execute one or more applications in a virtual environment on computer systems provided by the computing resource service provider. The virtual machines may be managed by a 
hypervisor
 executing on computer systems operated by the service provider. The virtual machines  memory may be protected by a memory obfuscation service and the 
hypervisor
. The memory obfuscation service may enable the virtual machines to maintain at least a portion of sensitive information in an obfuscated format. The virtual machines may request access to the virtual machines  memory, the memory obfuscation service may obtain the requested memory in an obfuscated format and un-obfuscate the memory such that it may be used by the virtual machines."
hypervisor,9251089,System supporting multiple partitions with differing translation formats,"A system configuration is provided with multiple partitions that supports different types of address translation structure formats. The configuration may include partitions that use a single level of translation and those that use a nested level of translation. Further, differing types of translation structures may be used. The different partitions are supported by a single 
hypervisor
."
hypervisor,9251088,"Mechanisms for eliminating a race condition between a 
hypervisor
-performed emulation process requiring a translation operation and a concurrent translation table entry invalidation","Disclosed are computers and methods employing a mechanism for eliminating a race condition between a 
hypervisor
-performed emulation process and a concurrent translation table entry invalidation. Specifically, on a host machine, a 
hypervisor
 controls any guest operating systems. In doing so, the 
hypervisor
 emulates an instruction by performing a translation operation to acquire a physical address from a virtual address and, if applicable, further from an effective address using translation table(s) (e.g., page tables and, if applicable, segment tables); accesses the physical address; and completes the instruction. During emulation, flagged address table(s) are used to eliminate the race condition. For example, upon receiving an invalidate translation instruction associated with a virtual address, a determination is made as to whether or not the virtual address appears in a flagged virtual address table and, if so, additional action is taken to prevent an error in the translation."
hypervisor,9251009,"Methods and apparatus for providing 
hypervisor
 level data services for server virtualization","A data center for data backup and replication, including a pool of multiple storage units for storing a journal of I/O write commands issued at respective times, wherein the journal spans a history window of a pre-specified time length, and a journal manager for dynamically allocating more storage units for storing the journal as the journal size increases, and for dynamically releasing storage units as the journal size decreases."
hypervisor,9250947,"Determining placement fitness for partitions under a 
hypervisor","A technique for determining placement fitness for partitions under a 
hypervisor
 in a host computing system having non-uniform memory access (NUMA) nodes. In an embodiment, a partition resource specification is received from a partition score requester. The partition resource specification identifies a set of computing resources needed for a virtual machine partition to be created by a 
hypervisor
 in the host computing system. Resource availability within the NUMA nodes of the host computing system is assessed to determine possible partition placement options. A partition fitness score of a most suitable one of the partition placement options is calculated. The partition fitness score is reported to the partition score requester."
hypervisor,9247042,Controlling use of a business environment on a mobile device,"A business environment on a mobile device can be controlled by an enterprise server by receiving identifying information transmitted from a mobile device, wherein the identifying information identifies a user of the mobile device to the enterprise server. A virtual phone template is transmitted to the mobile device, wherein the virtual phone template (i) corresponds to the identifying information, and (ii) is configured to provide the business environment on the mobile device as a virtual machine running on a 
hypervisor
 installed on top of a host operating system of the mobile device. The enterprise server then receives a periodic transmission from the mobile device to indicate that the mobile device remains in periodic communication with the enterprise server."
hypervisor,9244710,"Concurrent 
hypervisor
 replacement","Replacing a source 
hypervisor
 by a target 
hypervisor
 in a system having a first level 
hypervisor
 managing multiple logical partitions to share a set of resources of a server. The source 
hypervisor
 enabling at least one source virtual machine to share resources that are assigned to a source logical partition of the multiple logical partitions where the source 
hypervisor
 runs, the target 
hypervisor
 enabling at least one target virtual machine to share resources that are assigned to a target logical partition of the multiple logical partitions where the target 
hypervisor
 runs, wherein memory segments of a physical memory of the server are assigned to the at least one source virtual machine."
hypervisor,9367947,Remote rendering of three-dimensional images using virtual machines,"Remote rendering of three-dimensional images using virtual machines includes using a 
hypervisor
 executing on a physical computer to allocate exclusive and direct access to a graphics processing unit in the physical computer, to a first virtual machine. An agent executing on a second virtual machine intercepts three-dimensional draw commands generated by a three-dimensional application and forwards the intercepted draw commands to a rendering agent executing on the first virtual machine. The rendering agent then transmits the intercepted draw commands to the graphics processing unit for rendering upon which the graphics processing unit renders a three-dimensional image from the draw commands. The rendering agent obtains the rendered image from the graphics processing unit and forwards the image to the second virtual machine. Upon receiving the rendered image, the second virtual machine transmits the rendered image to another remote, physical computer where the rendered image is displayed to a user."
hypervisor,9239814,System and method for creating or reconfiguring a virtual server image for cloud deployment,"A system and method to convert a software application, such as a Java application into a virtual server image that is suitable for cloud deployment. In accordance with an embodiment, the system and method allows for building a 
hypervisor
 appliance containing a virtual machine running an application. In particular, the 
hypervisor
 appliance can be compatible with any 
hypervisor
 for server virtualization and the application virtual machine can be a Java Virtual Machine (JVM)."
hypervisor,9239765,"Application triggered state migration via 
hypervisor","Systems and methods that enable migration for state of an application, from a primary machine to a backup machine in platform virtualization systems. The migration employs a hybrid approach, wherein both a 
hypervisor,
 and an application itself determine states that are to migrate from the primary machine to the backup machine. Based on a direct communication between the application and the 
hypervisor
--without assistance of local operating system--the 
hypervisor
 arranges for migration of the required states over to the backup virtual machine."
hypervisor,9235435,Direct memory access filter for virtualized operating systems,"Described techniques increase runtime performance of workloads executing on a 
hypervisor
 by executing virtualization-aware code in an otherwise non virtualization-aware guest operating system. In one implementation, the virtualization-aware code allows workloads direct access to physical hardware devices, while allowing the system memory allocated to the workloads to be overcommitted. In one implementation, a DMA filter driver is inserted into an I/O driver stack to ensure that the target virtual memory of a DMA transfer is resident before the transfer begins. The DMA filter driver may utilize a cache to track which pages of memory are resident. The cache may also indicate which pages of memory are in use by one or more transfers, enabling the 
hypervisor
 to avoid appropriating pages of memory during a transfer."
hypervisor,9231869,Ensuring predictable and quantifiable networking performance,"The ensuring of predictable and quantifiable networking performance. Embodiments of the invention combine a congestion free network core with a 
hypervisor
 based (i.e., edge-based) throttling design to help insure quantitative and invariable subscription bandwidth rates. A lightweight shim layer in a 
hypervisor
 can adaptively throttle the rate of VM-to-VM traffic flow. A receiving 
hypervisor
 can detect congestion and communicate back to sending hypervisors that rates are to be regulated. In response, sending hypervisors can reduce transmission rate to mitigate congestion at the receiving 
hypervisor
. In some embodiments, the principles are extended to any message processors communicating over a congestion free network."
hypervisor,9230129,Software trusted computing base,"A software trusted platform module (sTPM) operates in a 
hypervisor,
 receives trust assurances from specialized hardware, and extends this trust such that the 
hypervisor
 performs trust attestation. The 
hypervisor
 receives a startup sequence validation from a TPM, or Trusted Platform Module. The TPM performs bus monitoring during a boot sequence of the computer system, records the startup sequence from the bus, and performs a hash on the sequence. The TPM performs an authentication exchange with the 
hypervisor such that the hypervisor
 authenticates the attestation of the computer system from the TPM, and the 
hypervisor,
 now delegated with trust assurances from the TPM, provides assurances to users via an authentication chain. The ATCB then performs the attestation of the computer system according to the attestation protocol much faster than the TPM. In this manner, the 
hypervisor
 operates as a software delegate of the TPM for providing user assurances of trust."
hypervisor,9229881,Security in virtualized computer programs,"In an embodiment, a data processing method comprises implementing a memory event interface to a hypercall interface of a 
hypervisor
 or virtual machine operating system to intercept page faults associated with writing pages of memory that contain a computer program; receiving a page fault resulting from a guest domain attempting to write a memory page that is marked as not executable in a memory page permissions system; determining a first set of memory page permissions for the memory page that are maintained by the 
hypervisor
 or virtual machine operating system; determining a second set of memory page permissions for the memory page that are maintained independent of the 
hypervisor
 or virtual machine operating system; determining a particular memory page permission for the memory page based on the first set and the second set; processing the page fault based on the particular memory page permission, including performing at least one security function associated with regulating access of the guest domain to the memory page."
hypervisor,9229850,Mapping data storage and virtual machines,"A method is used in mapping data storage and virtual machines. A logical volume from a data storage system is provided for use by a 
hypervisor
. The 
hypervisor
 is queried through a web service to identify a virtual machine of the 
hypervisor
. It is determined that the virtual machine is using the logical volume."
hypervisor,9229820,"Information processing device with memory dump function, memory dump method, and recording medium","An information processing device, including: a memory; a processing unit which operates a virtual machine, an operating system which is executed on the virtual machine, and a 
hypervisor
 which controls the virtual machine; and a control unit which controls a system including the memory and the processor. The processing unit stops the operating system when detecting an error of the 
hypervisor,
 notifies the control unit of a first memory area used by the 
hypervisor,
 stops the 
hypervisor,
 changes a memory area used by the 
hypervisor
 into a second memory area different from the first memory area notified by the control unit, starts the 
hypervisor
 using the second memory area as an available area, starts the operating system, and reads data in the first memory area, and writes the data to a file as a dump file of the 
hypervisor
."
hypervisor,9229764,Estimating migration costs for migrating logical partitions within a virtualized computing environment based on a migration cost history,"Responsive to a 
hypervisor
 determining that insufficient local resources are available for reservation to meet a performance parameter for at least one resource specified in a reservation request for a particular logical partition managed by the 
hypervisor
 in a host system, the 
hypervisor
 identifies another logical partition managed by the 
hypervisor
 in the host system that is assigned at the least one resource meeting the performance parameter specified in the reservation request. The 
hypervisor
 estimates a first cost of migrating the particular logical partition and a second cost of migrating the another logical partition to at least one other host system communicatively connected in a peer-to-peer network based on at least one previously recorded cost stored by the host system of migrating a previous logical partition to the at least one other host system."
hypervisor,9229763,Virtual media shelf,"A method and system for providing a guest with virtual media that can be read by the guest. A 
hypervisor
 hosted by a computer system presents a guest-to-host channel to a guest in the computer system. The 
hypervisor
 receives content from the guest via the guest-to-host channel, the content to be stored and managed by the 
hypervisor
 in a memory area associated with the guest in the computer system, the memory area not being directly accessible to the guest. The 
hypervisor
 then receives a request from the guest indicating that the guest is to perform at least one operation on the content, and provides the content for the guest to perform the at least one operation."
hypervisor,9367671,"Virtualization system with trusted root mode 
hypervisor
 and root mode VMM","A first component of a 
Hypervisor
 is loaded into the memory upon start up. The first component is responsible for context switching and some interrupt handling. The first component of the 
Hypervisor
 runs on a root level. An OS is loaded into a highest non-root privilege level. A second component of the 
Hypervisor
 is loaded into OS space together with the OS, and running on the highest non-root privilege level. A Virtual Machine Monitor is running on the root level. The second component of the 
Hypervisor
 is responsible for (a) servicing the VMM, and (b) enabling communication between VMM code launched on non-root level with the first component of the 
Hypervisor
 to enable root mode for the VMM. A Virtual Machine is running on a user level under control of the VMM."
hypervisor,9229760,Virtual memory management to reduce power consumption in the memory,"Reducing virtual memory power consumption during idle states in virtual memory systems comprising tracking the topology of the system memory by the system 
hypervisor
 and operating system running on any selected virtual machine hosted by the system 
hypervisor
. The idle states in the system memory are dynamically monitored and then the power consumption states in the system memory are dynamically reduced through the interaction of the 
hypervisor
 and the operation system running on the selected virtual machine."
hypervisor,9229757,Optimizing a file system interface in a virtualized computing environment,"Systems and methods for optimizing write operations to a storage device in a virtualized computing environment comprise monitoring write operations issued by an application running on a virtual machine s (VM) operating system, wherein the VM is hosted by a 
hypervisor
 providing access to a storage device in a virtualized computing environment; and causing a virtual file system (VFS) supported by the operating system to call on a first para-virtualized file system (PVFS FE) supported by the operating system to execute a write operation, in response to determining that the write operation is to write data to the storage device, wherein data that is to be written to the storage device is first written to a VM memory area allocated to the VM and accessible to the 
hypervisor
 hosting the VM."
hypervisor,9229752,"Systems and methods to offload hardware support using a 
hypervisor
 subpartition","In an exemplary embodiment of this disclosure, a system may include a first 
hypervisor,
 a second 
hypervisor,
 and a shared memory set. The first 
hypervisor
 and the second 
hypervisor
 run over a single logical partition. The shared memory set is accessible by both the first 
hypervisor
 and the second 
hypervisor,
 and the first 
hypervisor
 is configured to communicate with the second 
hypervisor
 by writing to the shared memory. The second 
hypervisor
 may provide support for hardware that is not supported by the first 
hypervisor,
 which hardware may be accessed by the first 
hypervisor
 through communications facilitated by use of the shared memory."
hypervisor,9229705,"In-band 
hypervisor
-managed firmware ","A software uptate through a primary network interface. The virtual firmware uptate executes over the 
hypervisor
 to initiate a download of a firmware uptate to a management processor of the information handling system through a management network interface. The firmware uptate executes to uptate the firmware of the information handling system with an uptate process managed by an end user through the primary network interface and the software uptate manager."
hypervisor,9219813,Provisioning work environments on personal mobile devices,"A virtual business mobile device can be provisioned on a personal mobile device, by binding a mobile application for provisioning the business mobile device to a privileged component of a host operating system of the personal mobile device, wherein the binding enables a 
hypervisor
 component and a management service component of the mobile application to execute in a privileged mode. The mobile application is then able to download a virtual phone image for the business mobile device and security-related policy settings relating to use of the business mobile device from a mobile management server, wherein the 
hypervisor
 component is able to launch a virtual machine for the business mobile device based on the virtual phone image. Once the virtual phone image has been downloaded, the management service component initiates a periodic attempt to establish a connection with the mobile management server to comply with the downloaded security-related policy settings."
hypervisor,9218489,"Systems and methods involving features of hardware virtualization such as separation kernel hypervisors, hypervisors, 
hypervisor
 guest context, 
hypervisor
 contest, rootkit detection/prevention, and/or other features","Systems, methods, computer readable media and articles of manufacture consistent with innovations herein are directed to computer virtualization, computer security and/or data isolation. According to some illustrative implementations, innovations herein may utilize and/or involve a separation kernel 
hypervisor
 which may include the use of a guest operating system virtual machine protection domain, a virtualization assistance layer, and/or a rootkit defense mechanism (which may be proximate in temporal and/or spatial locality to malicious code, but isolated from it), inter alia, for detection and/or prevention of malicious code, for example, in a manner/context that is isolated and not able to be corrupted, detected, prevented, bypassed, and/or otherwise affected by the malicious code."
hypervisor,9218304,Method for intercepting input/output requests and responses,"A method and system for intercepting I/O requests and responses in a proprietary operating environment or 
hypervisor
-virtualization utilizing open source software or general public license device drivers. The processing includes at the added functionality module comprises at least one of encrypting, de-duplicating, compressing and caching."
hypervisor,9218194,Distributed virtual machine image management for cloud computing,"Embodiments of the present invention and provide a method for distributed virtual machine (VM) image management in a cloud computing management includes receiving in a 
hypervisor
 executing in memory of a host computer, a request for VM image data from a VM and determining whether or not the requested VM image data is present in a local cache of either the 
hypervisor
 of the host computer or in a cache of a 
hypervisor
 of a peer host. The method additionally includes retrieving the requested VM image data from a seed image in a remote data store in the cloud computing environment only when it is determined that the VM image data neither is present in the local cache of the 
hypervisor
 of the host computer nor is present in the cache of the 
hypervisor
 of the peer host."
hypervisor,9218193,Distributed virtual machine image management for cloud computing,"Embodiments of the present invention and provide a method for distributed virtual machine (VM) image management in a cloud computing management includes receiving in a 
hypervisor
 executing in memory of a host computer, a request for VM image data from a VM and determining whether or not the requested VM image data is present in a local cache of either the 
hypervisor
 of the host computer or in a cache of a 
hypervisor
 of a peer host. The method additionally includes retrieving the requested VM image data from a seed image in a remote data store in the cloud computing environment only when it is determined that the VM image data neither is present in the local cache of the 
hypervisor
 of the host computer nor is present in the cache of the 
hypervisor
 of the peer host."
hypervisor,9215129,Automatically constructing protection scope in a virtual infrastructure,An automated technique for constructing and
hypervisor,9367345,Power efficient cross-VCPU notification by VM function,"A 
hypervisor
 configures a VM function component for execution on behalf of a guest operating system of a virtual machine, the VM function component to send a request to a virtual processor. The 
hypervisor
 receives a notification from the source virtual machine to execute the VM function component to send the request to the virtual processor. The VM function component identifies a physical processor associated with the virtual processor, and adds the request to a memory space associated with the physical processor."
hypervisor,9213840,"Systems and methods involving features of hardware virtualization, 
hypervisor,
 APIs of interest, and/or other features","Systems, methods, computer readable media and articles of manufacture consistent with innovations herein are directed to computer virtualization, computer security and/or memory access. According to some illustrative implementations, innovations herein may utilize and/or involve a separation kernel 
hypervisor
 which may include the use of a guest operating system virtual machine protection domain, a virtualization assistance layer, and/or a detection mechanism (which may be proximate in temporal and/or spatial locality to malicious code, but isolated from it), inter alia, for detection and/or notification of, and action by a monitoring guest upon access by a monitored guest to predetermined physical memory locations."
hypervisor,9208103,Translation bypass in multi-stage address translation,"A computer system that supports virtualization may maintain multiple address spaces. Each guest operating system employs guest virtual addresses (GVAs), which are translated to guest physical addresses (GPAs). A 
hypervisor,
 which manages one or more guest operating systems, translates GPAs to root physical addresses (RPAs). A merged translation lookaside buffer (MTLB) caches translations between the multiple addressing domains, enabling faster address translation and memory access. The MTLB can be logically addressable as multiple different caches, and can be reconfigured to allot different spaces to each logical cache. Lookups to the caches of the MTLB can be selectively bypassed based on a control configuration and the attributes of a received address."
hypervisor,9208015,"Hypervisor
 remedial action for a virtual machine in response to an error message from the virtual machine","Exemplary methods, apparatuses, and systems include a 
hypervisor
 receiving an error message from an agent within a first virtual machine run by the 
hypervisor
. In response to the error message, the 
hypervisor
 determines and initiates a corrective action for the 
hypervisor
 to take in response to the error message. An exemplary corrective action includes initiating a reset of the first virtual machine or a reset of a second virtual machine."
hypervisor,9208003,"Hypervisor
 to I/O stack conduit in virtual real memory","Provided is conduit configured such that a 
hypervisor
 does not need to include logic for communicating directly with an I/O storage device. A virtual Asynchronous Service Interface (VASI) is the interface between a Command/Response Queue (CRQ), which receives CRQ commands from the 
hypervisor,
 and a Common Data-Link Interface (CDLI) of a Forwarder. The Forwarder receives I/O commands in a format associated with the CDLI and converts the commands into a generic I/O format understood by a Virtual Block Storage Device (VBSD). The reformatted command is transmitted to the VBSD, which issues commands to the native I/O stack. The 
hypervisor
 sends a read or write (R/W) request to the VASI, which passes the request to the Forwarder. The Forwarder converts the request and transmits the converted request to the VBSD. The VBSD transmits the request to the block storage device and returns the response to the Forwarder. The Forwarder replies to the request from the VASI with the response from the ABSD. The VASI then responds to the 
hypervisor
. Also provided is an operation-specific module responsible for understanding and the intelligent processing of data that is transmitted between the 
hypervisor
 and the I/O stack."
hypervisor,9207963,Preventing cloud cartography,"Technologies are presented for a network
/hypervisor
 approach to maintain a stable and separate network address for the 
hypervisor
 on a multi-tenant system and changeable network addresses for the virtual machines (VMs). In some examples, the VM addresses may be decoupled from the domain address for the 
hypervisor
 so they can be changed arbitrarily and independently without impacting command messaging, and the domain address for the 
hypervisor
 may not form a part of the delivery chain for messages to the VMs. The system may also consume only the same number of IP addresses as currently used."
hypervisor,9203855,"Systems and methods involving aspects of hardware virtualization such as 
hypervisor,
 detection and interception of code or instruction execution including API calls, and/or other features","Systems, methods, computer readable media and articles of manufacture consistent with innovations herein are directed to computer virtualization, computer security and/or memory access. According to some illustrative implementations, innovations herein may utilize and/or involve a separation kernel 
hypervisor
 which may include the use of a guest operating system virtual machine protection domain, a virtualization assistance layer, and/or a instruction execution detection/interception mechanism (which may be proximate in temporal and/or spatial locality to malicious code, but isolated from it). The instruction execution detection/interception mechanism may perform processing, inter alia, for detection and/or notification of, and actions upon by a monitoring guest, code execution by a monitored guest involving predetermined physical memory locations, such as API calls. Such actions may include interception of API calls within the monitored guest and simulation thereof by the monitoring guest or another authorized guest."
hypervisor,9202046,Systems and methods for executing arbitrary applications in secure environments,"Described systems and methods allow protecting a host system, such as a computer system or smartphone, from malware such as viruses, exploits, and rootkits. In some embodiments, a 
hypervisor
 executes at the highest processor privilege level and displaces other software to a guest virtual machine (VM). A security application detects the launch of a target process within the guest VM. In response to the launch, the 
hypervisor
 instantiates a process VM isolated from the guest VM, and relocates the target process to the process VM. In some embodiments, when the relocated target process attempts to access a resource, such as a file or registry key, an instance of the respective resource is fetched on-demand, from the guest VM to the respective process VM. Executing the target process within an isolated environment helps to contain malware to the respective environment."
hypervisor,9201777,Quality of service support using stacked memory device with logic die,"A die-stacked memory device implements an integrated QoS manager to provide centralized QoS functionality in furtherance of one or more specified QoS objectives for the sharing of the memory resources by other components of the processing system. The die-stacked memory device includes a set of one or more stacked memory dies and one or more logic dies. The logic dies implement hardware logic for a memory controller and the QoS manager. The memory controller is coupleable to one or more devices external to the set of one or more stacked memory dies and operates to service memory access requests from the one or more external devices. The QoS manager comprises logic to perform operations in furtherance of one or more QoS objectives, which may be specified by a user, by an operating system, 
hypervisor,
 job management software, or other application being executed, or specified via hardcoded logic or firmware."
hypervisor,9201682,Virtualized device reset,"In a hardware-based virtualization system, a 
hypervisor
 switches out of a first function into a second function. The first function is one of a physical function and a virtual function and the second function is one of a physical function and a virtual function. During the switching a malfunction of the first function is detected. The first function is reset without resetting the second function. The switching, detecting, and resetting operations are performed by a 
hypervisor
 of the hardware-based virtualization system. Embodiments further include a communication mechanism for the 
hypervisor
 to notify a driver of the function that was reset to enable the driver to restore the function without delay."
hypervisor,9201680,Display power management in distributed virtualized systems,"A system and method for display power management in a virtualized environment are disclosed. In accordance with one embodiment, a 
hypervisor
 that is executed by a first computer system receives a notification that a host operating system of a second computer system has received a command to dim a video display of the second computer system, and forwards the notification to a guest operating system of a virtual machine hosted by the first computer system. The 
hypervisor
 receives from the guest operating system a first signal that indicates that the 
hypervisor
 is to notify the host operating system to refrain from executing the command. The 
hypervisor
 then transmits a second signal that notifies the host operating system to refrain from executing the command."
hypervisor,9367343,Dynamic batch management of shared buffers for virtual machines,"Methods, systems, and computer program products for providing dynamic batch management of shared packet buffers are disclosed. A virtualized computer system may include a 
hypervisor
 with access to memory and executed by a processor to maintain a pool of host memory to store a plurality of incoming network packets received by a network device, adjust a number of memory buffers associated with the pool of host memory to resize the pool of host memory, receive an indication of an incoming network packet stored in the pool of host memory by the network device, and provide the incoming network packet to a guest. In an example, the 
hypervisor
 uses the pool of host memory to perform batch processing of the incoming network packets and dynamically adjusts the size of the pool during the processing by adding or removing memory buffers in response to an event, condition, request, etc."
hypervisor,9201678,"Placing a virtual machine on a target 
hypervisor","A method is provided for placing a virtual machine on a target virtual machine manager out of multiple virtual machine managers. System management software is connected to the virtual machine managers and selects the target virtual machine manager for placing the virtual machine. The method includes: the system management software creating a memory profile for all virtual machines hosted on the multiple virtual machine managers, the system management software evaluating probabilities for samepage mapping of the virtual machine to be placed on the multiple virtual machine managers based on the memory profiles of the virtual machines, the system management software selecting under consideration of the probabilities for samepage mapping a most appropriate virtual machine manager as the target virtual machine manager, and the system management software placing the virtual machine on the target virtual machine manager."
hypervisor,9195821,System and methods for remote software authentication of a computing device,"The current disclosure relates to techniques for system and methods for software-based management of remote software authentication of at least one entity machine, addressing various vulnerabilities of software authentication based upon the genuinity based scheme. The disclosure is using challenge execution on at least one suspect machine, providing a technique for CPU event monitoring of a combined count of at least two events monitored on the entity machine during execution of the authentication challenge. The authentication challenge allows further detection functionality of virtual machine or a 
hypervisor
 installed. The techniques measures execution time of authentication challenge, comparing the received challenge result with the expected challenge result and accordingly rejects or allows the entity machine through the authentication process."
hypervisor,9191454,Host enabled management channel,"A logical communication path is provided between a target virtual machine (VM) and a host or application communicating with the VM. The target VM runs on a 
hypervisor
 host that has a 
hypervisor
 and a proxy agent. The 
hypervisor
 manages execution of the VM. A mapping is maintained indicating which VMs execute on which hosts. When the host or application is to send a message or packet to the target VM, the mapping is consulted and the 
hypervisor
 host hosting the target VM is identified. The message or packet, which may identify the target VM, is transmitted to the 
hypervisor
 host. A proxy agent at the 
hypervisor
 host selects a communication channel between the 
hypervisor
 and the target VM. The 
hypervisor
 then passes the message or packet through the selected channel to the target VM."
hypervisor,9189630,Systems and methods for active operating system kernel protection,"Systems and methods for intercepting computing device system calls for a computing device including a kernel having a system call table. A 
hypervisor
 is executed on the computing device, the 
hypervisor
 configured to control at least one of the computing device processor registers. At least one modified kernel structure is created, the modified kernel structure including a modified system call table. A memory address of an original system call handler is determined, the original system call handler configured to receive kernel operation commands. A size of a loaded image of the original system call handler is determined. A copy of the original system call handler as a second system call handler is created, and the second system call handler intercepts a computing device system call."
hypervisor,9189419,Detecting and suppressing redundant input-output operations,"In a virtual machine, swap activities of a 
hypervisor
 and a guest OS are reconciled so that redundant input-output operations (IOs) can be avoided and a synchronous response time of the virtual machine improved. This is achieved with a map of memory pages to blocks of storage. For a write IO to write contents of a memory page into a target block, the map is examined to see if it contains a valid entry for the memory page. If the map contains the valid entry, the write IO is prevented from being issued and a data structure is"
hypervisor,9189410,"Hypervisor
-based flash cache space management in a multi-VM environment","Techniques for managing space in a flash storage-based cache are provided. In one embodiment, a computer system can calculate ""ratio of effective cache space"" (rECS) values for a plurality of VMs, where each VM has a cache allocation comprising a subset of a global pool of cache blocks in the flash storage-based cache, and where the rECS value for the VM indicates a proportion of the subset that has been populated with cached data and re-accessed by the VM within a current time window. The computer system can further determine a new cache allocation size for at least one VM in the plurality of VMs based on the rECS values. The computer system can then adjust the number of cache blocks in the at least one VM s cache allocation based on the new cache allocation size."
hypervisor,9189247,Method for switching between virtualized and non-virtualized system operation,"A method performed by an embedded system controlled by a CPU and capable of operating as a virtualized system under supervision of a 
hypervisor
 or as a non-virtualized system under supervision of an operating system, is provided. The embedded system is executed in a normal mode if no execution of any security critical function is required, where the normal mode execution is performed under supervision of the operating system. If a security critical function execution is required, where protected mode execution is performed under supervision of the 
hypervisor,
 the operating system is switching execution of the embedded system from normal mode to protected mode, by handing over the execution of the embedded system from the operating system to the 
hypervisor
. When execution of the security critical function is no longer required by the system is switched from protected mode to normal mode, under supervision of the 
hypervisor
."
hypervisor,9185114,Methods and systems for secure storage segmentation based on security context in a virtual environment,"A computer system identifies a request to place a workload in a 
hypervisor
-based host. The computer system identifies a security level of the workload. The computer system identifies a security level of a storage device associated with the 
hypervisor
-based host. If the security level of the workload corresponds to the security level of the storage device, the computer system grants the request to place the workload in the 
hypervisor
-based host. If the security level of the workload does not correspond to the security level of the storage device, the computer system denies the request to place the workload in the 
hypervisor
-based host."
hypervisor,9185053,Virtual fault tolerant ethernet appliance and method of operation,"An apparatus includes at least one processing unit configured to execute a virtual network appliance and a virtual machine. The virtual network appliance includes a virtual NIC driver configured to transfer packets to and from a physical port of the apparatus. The virtual network appliance also includes an internal network interface configured to transfer the packets to and from the virtual machine through a 
hypervisor
. The virtual network appliance further includes an aggregator configured to transfer the packets between the virtual NIC driver and the internal network interface."
hypervisor,9184981,System and apparatus for distributed mobility management based network layer virtual machine mobility protocol,"A network element (NE) comprising a 
hypervisor
 configured to receive a first virtual machine (VM) from a source 
hypervisor,
 and send a first VM mobility registration request to a management node, wherein the first VM mobility registration request comprises a VM identifier associated with the first VM and an internet protocol (IP) address associated with the 
hypervisor
. Also disclosed is a management node comprising a binding cache, and a processor, wherein the processor is configured to receive a first VM mobility registration request from a first 
hypervisor,
 wherein the first VM mobility registration is associated with a VM, and record VM information from the first VM mobility registration request in an entry of the binding cache."
hypervisor,9361244,Apparatus for hardware accelerated runtime integrity measurement,"Techniques are described for providing processor-based dedicated fixed function hardware to perform runtime integrity measurements for detecting attacks on system supervisory software, such as a 
hypervisor
 or native Operating System (OS). The dedicated fixed function hardware is provided with memory addresses of the system supervisory software for monitoring. After obtaining the memory addresses and other information required to facilitate integrity monitoring, the dedicated fixed function hardware activates a lock-out to prevent reception of any additional information, such as information from a corrupted version of the system supervisory software. The dedicated fixed function hardware then automatically performs periodic integrity measurements of the system supervisory software. Upon detection of an integrity failure, the dedicated fixed function hardware uses out-of-band signaling to report that an integrity failure has occurred. The dedicated fixed function hardware provides for runtime integrity verification of a platform in a secure manner without impacting the performance of the platform."
hypervisor,9183399,Instruction set architecture with secure clear instructions for protecting processing unit architected state information,"A method and circuit arrangement utilize secure clear instructions defined in an instruction set architecture (ISA) for a processing unit to clear, overwrite or otherwise restrict unauthorized access to the internal architected state of the processing unit in association with context switch operations. The secure clear instructions are executable by a 
hypervisor,
 operating system, or other supervisory program code in connection with a context switch operation, and the processing unit includes security logic that is responsive to such instructions to restrict access by an operating system or process associated with an incoming context to architected state information associated with an operating system or process associated with an outgoing context."
hypervisor,9183061,"Preserving, from resource management adjustment, portions of an overcommitted resource managed by a 
hypervisor","Methods, apparatuses, and computer program products for preserving, from resource management adjustment, portions of an overcommitted resource managed by a 
hypervisor
 are provided. Embodiments include identifying, by the 
hypervisor,
 a privileged guest from among a plurality of guests of the 
hypervisor
; identifying, by the 
hypervisor,
 portions of the overcommitted resource that are allocated to the privileged guest; and preventing, by the 
hypervisor,
 resource management adjustment to the identified portions of the overcommitted resource that are allocated to the privileged guest."
hypervisor,9183054,Maintaining hardware resource bandwidth quality-of-service via hardware counter,"Each time a currently scheduled virtual machine (VM) accesses a hardware resource over a bus for the hardware resource via the currently scheduled VM running on a processor, a hardware component adjusts a bandwidth counter associated with usage of the bus for the hardware resource, without involvement of the currently scheduled VM or a 
hypervisor
 managing the currently scheduled VM. Responsive to the bandwidth counter reaching a threshold value, the hardware component issues an interrupt for handling by the 
hypervisor
 to maintain bandwidth quality-of-service (QoS) of bus bandwidth related to the hardware resource. Upon expiration of a regular time interval prior to the bandwidth counter reaching the threshold value, the hardware component resets the bandwidth counter to a predetermined value associated with the currently scheduled VM, without involvement of the currently scheduled VM or the 
hypervisor
; the hardware component does not issue an interrupt. The hardware resource can be memory."
hypervisor,9183046,Network address retrieval for live migration of a guest system in a virtual machine system,"A method and system for managing network addresses of a guest during live migration in a virtual machine system. A computer system hosts a guest that is to migrate from a source 
hypervisor
 in the computer system to a target 
hypervisor
 during operation of the computer system. In response to the indication, the source 
hypervisor
 retrieves an address list of the guest from a network device, where the address list identifies one or more network addresses of the guest in one or more networks. The source 
hypervisor
 then forwards the address list to the target 
hypervisor,
 which notifies the one or more networks of the migration of the guest."
hypervisor,9183032,"Method and system for migration of multi-tier virtual application across different clouds 
hypervisor
 platforms","A method and system for migration of multi-tier virtual application across different clouds 
hypervisor
 platforms. The principal object of the embodiment is to provide migration of multi-tier virtual application from one vendor to another vendor cloud platforms. Another object of the embodiment is to convert entire multi-tier virtual application of a source vendor cloud platforms, along with the virtual machines, configuration and properties into a format suitable for a destination vendor cloud platforms. Another object of the embodiment is to verify the migrated application after completion of conversion and migration."
hypervisor,9183029,Synchronizing backend peripheral devices with a virtual machine running state,"A mechanism for synchronizing backend peripheral devices with a virtual machine (VM) running state is disclosed. A method of the invention includes modifying a running state of a (VM managed by a 
hypervisor
 of a host machine, and"
hypervisor,9183022,Maintaining hardware resource bandwidth quality-of-service via hardware counter,"Each time a currently scheduled virtual machine (VM) accesses a hardware resource over a bus for the hardware resource via the currently scheduled VM running on a processor, a hardware component adjusts a bandwidth counter associated with usage of the bus for the hardware resource, without involvement of the currently scheduled VM or a 
hypervisor
 managing the currently scheduled VM. Responsive to the bandwidth counter reaching a threshold value, the hardware component issues an interrupt for handling by the 
hypervisor
 to maintain bandwidth quality-of-service (QoS) of bus bandwidth related to the hardware resource. Upon expiration of a regular time interval prior to the bandwidth counter reaching the threshold value, the hardware component resets the bandwidth counter to a predetermined value associated with the currently scheduled VM, without involvement of the currently scheduled VM or the 
hypervisor
; the hardware component does not issue an interrupt. The hardware resource can be memory."
hypervisor,9183015,Hibernate mechanism for virtualized java virtual machines,"Methods, systems, and computer programs manage memory of a runtime environment executing on a virtual machine. A controller acts as an intermediary layer between the runtime environment and outside clients. The runtime environment coordinates with the controller to ""hibernate"" during idle periods to more efficiently utilize memory, and to quickly ""refresh"" state upon receiving an access attempt. A 
hypervisor
 may perform memory page compression on one or more guest ""physical"" memory pages utilized by an idle runtime environment. While hibernating, the runtime environment may use a listener thread to monitor for refresh requests and awaken the runtime environment when needed."
hypervisor,9176787,"Preserving, from resource management adjustment, portions of an overcommitted resource managed by a 
hypervisor","Methods, apparatuses, and computer program products for preserving, from resource management adjustment, portions of an overcommitted resource managed by a 
hypervisor
 are provided. Embodiments include identifying, by the 
hypervisor,
 a privileged guest from among a plurality of guests of the 
hypervisor
; identifying, by the 
hypervisor,
 portions of the overcommitted resource that are allocated to the privileged guest; and preventing, by the 
hypervisor,
 resource management adjustment to the identified portions of the overcommitted resource that are allocated to the privileged guest."
hypervisor,9176767,Network interface card device pass-through with multiple nested hypervisors,"In a data center computing system, multiple nested hypervisors are run, including an outer 
hypervisor
 and at least one inner 
hypervisor
 running as a virtual machine on top of the outer 
hypervisor
. A guest operating system is run as a virtual machine in the innermost 
hypervisor
. An emulated network interface card device is executed in all hypervisors. An extender component is executed in the outer 
hypervisor
 and an extender component is executed in the inner hypervisors such that the extender components in the outer 
hypervisor
 and in the inner hypervisors are architecturally cascaded. An interface for the guest operating system is assigned to the emulated network interface card device in each of the outer 
hypervisor
 and the inner hypervisors to enable network communications to bypass the outer 
hypervisor
 and the inner hypervisors."
hypervisor,9361159,Runtime chargeback in a simultaneous multithreading (SMT) environment,"A technique for chargeback with simultaneous multithreading (SMT) by a computer is provided. One or more of an operating system and a second-level 
hypervisor
 of the computer manage a logical core configuration for simultaneous multithreading, the operating system and/or the second-level 
hypervisor
 has control over a logical core and control over logical threads on the logical core. The operating system and/or the second-level 
hypervisor
 is configures a host 
hypervisor
 to assign an entirety of the logical core to a single physical core, such that one logical core executes per physical core. The logical core is run on the single physical core on an exclusive basis for a period of time, such that the logical threads of the logical core execute on physical threads of the single physical core. A capacity use time is determined for each of the logical threads executing on the physical threads of the single physical core."
hypervisor,9176764,Managing memory in virtualized environments,"Techniques are described for enabling a virtual machine to be presented with an amount of available guest memory, where a 
hypervisor
 or other privileged component manages the mapping of the resources based at least in part on the capacity of resources one or more hosts. This enables resources to be effectively oversubscribed to on host computing devices that have a limited amount of total available resources but which are running multiple virtual machines. For example, each virtual machine on the device can be presented as having access to the total amount of available resources that are available on the device or more in some cases. In some cases, resources may be mapped to a plurality of hosts that have available resources."
hypervisor,9176763,Apparatus and method thereof for efficient execution of a guest in a virtualized environment,"A method for efficient execution of a guest in a virtualized computing environment is provided. The method comprises causing an execution of at least one virtual machine on a computing hardware, the virtual machine executes a 
hypervisor
 in a first security ring; and causing an execution of a single guest program on one of the at least one virtual machines, the single guest program comprises a kernel being executed in the first security ring and at least one application being executed in a second security ring."
hypervisor,9176676,Efficiency of virtual machines that use de-duplication as primary data storage,"Example apparatus and methods provide two types of storage for a virtual machine running on a 
hypervisor
. The first storage is de-duplication based and the second storage is not de-duplication based. Example apparatus and methods may acquire data from the first storage to instantiate the virtual machine, to instantiate an operating system on the virtual machine, or to instantiate an application on the virtual machine from the first storage. Example apparatus and methods may write a snapshot to the second storage and then support random input/output for the virtual machine, for the operating system, or for the application from the second storage. The snapshot may selectively be collapsed or the second storage may selectively be retired and thus example systems may selectively"
hypervisor,9171139,Lock screens to access work environments on a personal mobile device,"One or more embodiments of the invention provide access to a work environment in a mobile device from a lock screen presented by a personal environment of the mobile device, wherein the work environment is running in a virtual machine supported by a 
hypervisor
 running within the personal environment and wherein the personal environment is a host operating system (OS) of the mobile device. The host OS receives an authentication credential from a user in response to a presentation of the lock screen on a user interface (UI) of the mobile device and then determines whether the authentication credential is valid for the personal environment or the work environment. If the authentication credential is valid for the personal environment, access is enabled only to the personal environment. If the authentication credential is valid for the work environment, access is enabled to both the personal environment and the work environment."
hypervisor,9170916,Power profiling and auditing consumption systems and methods,"Systems and methods for estimating power consumption in a network of computing devices are described. Operational information of a target server is periodically received and compared to benchmark data of a model of the target server. The operational information comprises performance data of the target server during a predefined time interval. Power consumption of the target server is estimated using the performance and benchmark data. The benchmark data is recalibrated if an error in the estimated power consumption is detected. An agent installed on the target server for collecting performance data is described. The target server can be a virtualized server, in which case, the agent acquires at least some of the performance data from a 
hypervisor
 of a physical server that hosts the target server."
hypervisor,9170831,Cloning virtual machines,"While current solutions for cloning virtual machines can involve copying and duplicating files associated to a virtual machine (VM), systems and techniques can be devised to create thin clones of a VM using the VM s associated storage system to copy and deduplicate storage for the VMs. One can create a base VM in a directory of a storage container attached to a 
hypervisor,
 and then map the storage container to a volume on a storage system. One can clone the base VM using a snapshot of respective files associated to the base VM, which can comprise creating metadata that identified a physical storage location of the files. Further, the metadata can then be copied to a desired location on the storage container, to create a VM clone. Once copied, the cloned VM can be customized and registered within the 
hypervisor
."
hypervisor,9164853,Multi-core re-initialization failure control system,"A method of a computer system recovering from a core re-initialization failure is described. The method may include automatically detect a core re-initialization failure during a core re-initialization process by a 
hypervisor
. The 
hypervisor
 automatically determines whether the core re-initialization failure is a permanent failure. If the core re-initialization failure is a permanent failure, then automatically determine, by the 
hypervisor,
 which cores are re-initialized and which cores are indeterminate. Automatically allocate the re-initialized cores between one or more virtual machines by the 
hypervisor
."
hypervisor,9164809,Virtual processor provisioning in virtualized computer systems,"A system and method for allocating additional virtual processors to virtual machines (referred to as ""automatic processor hotplug"") are disclosed. In accordance with one embodiment, a guest operating system of a virtual machine detects when a measure of system load exceeds a threshold. In response, the guest operating system transmits a request to a 
hypervisor
 for an additional virtual processor for the virtual machine."
hypervisor,9164789,Multiple queue management and adaptive CPU matching in a virtual computing system,"A method and system for managing multiple queues providing a communication path between a virtual machine and a 
hypervisor
 in a virtual machine system. The multiple queues are bundled together and identified on a polled list. When one of the queues on the polled list is used to communicate a request from the virtual machine to the 
hypervisor,
 a virtual machine exit is performed and a virtual machine exit is disabled for all of the queues on the polled list. The queues on the polled list are assigned to an initial host CPU to service requests from the virtual machine. If a particular queue on the polled list experiences a load that exceeds a load threshold, the particular queue is removed from the polled list and assigned to a different host CPU."
hypervisor,9164786,Determining performance states of parent components in a virtual-machine environment based on performance states of related child components during a time period,"Techniques promote monitoring of 
hypervisor
 systems by presenting dynamic representations of 
hypervisor
 architectures that include performance indicators. A reviewer can interact with the representation to progressively view select lower-level performance indicators. Higher level performance indicators can be determined based on tower level state assessments. A reviewer can also view historical performance metrics and indicators, which can aid in understanding which configuration changes or system usages may have led to sub-optimal performance."
hypervisor,9361141,"Systems and methods for controlling, by a 
hypervisor,
 access to physical resources","A system for controlling, by a 
hypervisor,
 access to physical resources during execution of a virtual machine includes a physical disk and a 
hypervisor
. The physical disk is provided by a computing device and stores at least a portion of a virtual disk. The 
hypervisor
 executes on the computing device. The 
hypervisor
 allocates, to the virtual disk, an amount of access to the physical disk. The 
hypervisor
 determines that a level of utilization of the physical disk has exceeded a threshold. The 
hypervisor
 limits, in response to the determination, access by the virtual disk to the physical disk."
hypervisor,9164784,Signalizing an external event using a dedicated virtual central processing unit,"Various embodiments of a virtualization system and method are provided herein, wherein computer resources are emulated and simulated by a 
hypervisor
 system. In order to provide improved signalization within a virtual computer system, various embodiments may use a virtual CPU for signalizing an external event, wherein the virtual CPU is used temporarily by a signalization routine for processing the signalization of the event."
hypervisor,9160659,Paravirtualized IP over infiniband bridging,"Systems and methods for paravirtualized Internet Protocol over Infiniband (IPoIB) bridging for virtual machines. An example method may comprise associating, by a 
hypervisor
 executing on a host computer system, an Infiniband (IB) interface of the host computer system with a paravirtualized IPoIB interface of a virtual machine executing on the host computer system; receiving, via the paravirtualized IPoIB interface, a paravirtualized IPoIB packet originated by the virtual machine, the paravirtualized IPoIB packet comprising an IP packet and a first header including an IPoIB hardware address; translating the paravirtualized IPoIB packet into an IPoIB frame comprising the IP packet and a second header including the IPoIB hardware address; and forwarding the IPoIB frame via the IB interface to one of: an IB switch, an external IB node."
hypervisor,9158913,Managing virtual machines using owner digital signatures,"A computer system is disclosed that includes a host operating system and a virtual 
hypervisor
 that operates under management of the host operating system to control operations of virtual machines operating under management of the virtual 
hypervisor
. The virtual 
hypervisor
 provides an interface between the virtual machines and the host operating system. A signing component generates digital signatures which identify owners of the virtual machines and associates the digital signatures with the virtual machines. A signature validation component determines the owners of the virtual machines using the digital signatures and responsive to occurrence of defined events. Related methods and computer program products for operating computer systems are also disclosed."
hypervisor,9158571,"Offloading service requests to a second guest 
hypervisor
 in a logical partition shared by a plurality of guest hypervisors","Embodiments relate to a method for encapsulating a virtual server in a 
hypervisor
 subpartition of a single logical partition to provide additional hardware support and advanced virtualization functions. An aspect includes running a first 
hypervisor
 and one or more additional hypervisors over a single logical partition. A request to manage a virtual server is received at the first 
hypervisor
. The request is then analyzed to determine what resources are necessary to manage the virtual server. Based on the analyzed request, one of the first 
hypervisor
 or the one or more additional hypervisors is selected to complete the request."
hypervisor,9158569,Virtual interrupt delivery from a graphics processing unit (GPU) of a computing system without hardware support therefor,"A method includes loading a driver component on a 
hypervisor
 of a computing system including a Graphics Processing Unit (GPU) without hardware support for virtual interrupt delivery, and loading an instance of the driver component on each of a number of VMs consolidated on a computing platform of the computing system. The method also includes allocating a memory page associated with work completion by the each of the number of VMs thereto through a driver stack executing on the 
hypervisor,
 and sharing the memory page with the driver component executing on the 
hypervisor
. Further, the method includes delivering, through the 
hypervisor,
 an interrupt from the GPU to an appropriate VM based on inspecting the memory page associated with the work completion by the each of the number of VMs."
hypervisor,9158565,Predictable computing in virtualizated distributed computer systems based on partitioning of computation and communication resources,"The invention relates to a method for providing guaranteed quality of service in distributed computing platforms for execution of distributed applications, by combining: i) a partitioned operating system (POS) or a 
hypervisor
 (101) executed on at least two computers (300,301); where said POS
/hypervisor
 allocates the CPU, memory and I/O hardware resources to computer partitions in said computers; where said computers are capable of executing different computer partitions (104, 105, 106) with different application tasks within one said computer partition or executing different operating systems (in case of 
hypervisor
) within one said computer partition; wherein the said POS
/hypervisor
 ensures that the application tasks executed in different partitions within the same said computer get their allocated hardware resources; wherein said POS
/hypervisor
 performs a time-driven scheduling for a subset of computer partitions based on a given configuration (136), ii) means, for example network communication technology, for implementing partitioning of Ethernet communication resources and creating virtualized networks out of one physical network."
hypervisor,9158564,Virtual service processor stack,"Certain aspects of the present disclosure are directed to a computer system, including: a 
hypervisor
 configured to run on a CPU and to provide a first domain; and a virtual baseboard management controller (BMC) stack configured to run in the first domain or as part of the 
hypervisor
. Certain aspects of the present disclosure are directed to a non-transitory computer readable medium that stores instructions executable by at least one processor, the instructions including loading a virtual baseboard management controller (BMC) stack in a first domain of, or as a part of, a 
hypervisor
 running on the processor."
hypervisor,9152548,Controlling access to a privileged resource in user-mode system level mobile virtualization using a ptrace () system call,"One embodiment of the present invention provides a system that facilitates user-mode system-level virtualization in a mobile device. During operation, a 
hypervisor
 intercepts a virtual machine s attempt to access a privileged resource. The 
hypervisor
 manages the virtual machine and runs on a host system in a user mode. Furthermore, the 
hypervisor
 emulates the privileged resource using a user-mode system call provided by the host system. In addition, the 
hypervisor
 provides access to the emulated privileged resource to the virtual machine, thereby allowing the virtual machine to operate with the emulated privileged resource without directly accessing actual privileged resources on the host system."
hypervisor,9152450,"Offloading service requests to a second guest 
hypervisor
 in a logical partition shared by a plurality of guest hypervisors","Embodiments relate to a method for encapsulating a virtual server in a 
hypervisor
 subpartition of a single logical partition to provide additional hardware support and advanced virtualization functions. An aspect includes running a first 
hypervisor
 and one or more additional hypervisors over a single logical partition. A request to manage a virtual server is received at the first 
hypervisor
. The request is then analyzed to determine what resources are necessary to manage the virtual server. Based on the analyzed request, one of the first 
hypervisor
 or the one or more additional hypervisors is selected to complete the request."
hypervisor,9152200,Resource and power management using nested heterogeneous hypervisors,"A server includes a plurality of processors, at least some of the processors being partitioned into virtual partitions using a virtual partition 
hypervisor
. At least one of the virtual partitions executes a virtual machine 
hypervisor
 to implement a plurality of virtual machines within said at least one of said virtual partitions. The server also executes a workload manager application configured to dynamically reallocate the processors among the virtual partitions."
hypervisor,9361089,Secure patch ,Virtual Machine (VM) images in a virtualized environment are
hypervisor,9147078,Instruction set architecture with secure clear instructions for protecting processing unit architected state information,"A method and circuit arrangement utilize secure clear instructions defined in an instruction set architecture (ISA) for a processing unit to clear, overwrite or otherwise restrict unauthorized access to the internal architected state of the processing unit in association with context switch operations. The secure clear instructions are executable by a 
hypervisor,
 operating system, or other supervisory program code in connection with a context switch operation, and the processing unit includes security logic that is responsive to such instructions to restrict access by an operating system or process associated with an incoming context to architected state information associated with an operating system or process associated with an outgoing context."
hypervisor,9146847,Optimizing for page sharing in virtualized java virtual machines,"Methods, systems, and computer programs manage memory of a runtime environment executing on a virtual machine. A runtime environment, such as a Java Virtual Machine, may deterministically arrange immutable data within memory such that a 
hypervisor
 may perform page sharing on the immutable data. The runtime environment may page-align the immutable data within memory. The runtime environment may further store the immutable within memory using self-referenced or self-relative pointers."
hypervisor,9146769,Systems and methods for copying a source machine to a target virtual machine,"Systems and methods of the present disclosure can facilitate generating virtual machines (VMs). The system can include an orchestrator executing on a server, an agent, a 
hypervisor,
 a transfer VM, and a target VM different from the transfer VM. The orchestrator can transmit the agent to be installed on a source machine to generate a snapshot and transmit a current state of a first filesystem of the source machine to the orchestrator, which can use it to configure a second filesystem on the 
hypervisor
 and initiate the transfer VM on the 
hypervisor
 using a default filesystem independent of the first and second filesystem configurations. The orchestrator can instruct the agent to transfer the snapshot to the transfer VM to write to the second filesystem,"
hypervisor,9146767,"Secure cloud 
hypervisor
 monitor","This disclosure addresses systems and methods for the protection of hardware and software in a computing environment. A 
hypervisor
-monitor may be nested between the hardware of a host system and a 
hypervisor
 that is capable of supporting one or more guest virtual machines. The 
hypervisor
-monitor may intercept exceptions generated by one or more processors in the host system and inspect software instructions for the 
hypervisor
 and the guests. Inspection may include performing a hash of the software instructions and a comparison of the hash with authorized software modules or a set of known malware. In this manner the 
hypervisor
-monitor may monitor prevent the execution of malware by the 
hypervisor
 or the guests or provide a record of when code of an unknown origin was executed."
hypervisor,9146762,Specialized virtual machine to virtualize hardware resource for guest virtual machines,"A computing system includes a graphics processing unit (GPU) and main processing circuitry to execute computer program instructions forming a 
hypervisor,
 a control virtual machine (VM) and a specialized rendering VM for graphics processing. An application program of a guest VM generates graphics commands and data according to a graphics API such as Direct 3D. The rendering VM includes a graphics driver native to the GPU and is assigned pass-through access to the GPU by the control VM. The rendering VM receives the graphics information from the application program via an inter-VM communication channel, and it uses the graphics driver to control the GPU to perform graphics rendering. The use of the rendering VM enables native graphics performance to be achieved without constraining the control VM to use a compatible operating system. The technique is generally applicable to virtualization of hardware resources by specialized VMs."
hypervisor,9146760,Fast booting a computing device to a specialized experience,"Described is a technology by which independent computing functions such as corresponding to separate operating systems may be partitioned into coexisting partitions. A virtual machine manager, or 
hypervisor,
 manages the input and output of each partition to operate computer system hardware. One partition may correspond to a special purpose operating system that quickly boots, such as to provide appliance-like behavior, while another partition may correspond to a general purpose operating system that may load while the special purpose operating system is already running. The computer system that contains the partitions may transition functionality and devices from one operating system to the other. The virtual machine manager controls which computer hardware devices are capable of being utilized by which partition at any given time, and may also facilitate inter-partition communication."
hypervisor,9141529,Methods and apparatus for providing acceleration of virtual machines in virtual environments,"A host server computer system that includes a 
hypervisor
 within a virtual space architecture running at least one virtualization, acceleration and management server and at least one virtual machine, at least one virtual disk that is read from and written to by the virtual machine, a cache agent residing in the virtual machine, wherein the cache agent intercepts read or write commands made by the virtual machine to the virtual disk, and a solid state drive. The solid state drive includes a non-volatile memory storage device, a cache device and a memory device driver providing a cache primitives application programming interface to the cache agent and a control interface to the virtualization, acceleration and management server."
hypervisor,9141434,Robust non-shareable resource access under live virtual machine cloning,"A system and method are disclosed for preventing concurrent access by a virtual machine and a clone of the virtual machine to a resource in a non-shareable state. In accordance with one embodiment, a 
hypervisor
 receives a command to clone a virtual machine, and determines whether any resource used by the virtual machine is in a non-shareable state (e.g., the virtual machine holds a lock on a resource, a resource comprises memory that stores secure data, etc.). When any resource used by the virtual machine is in a non-shareable state, the 
hypervisor
 delays cloning of the virtual machine until all resources used by the virtual machine are in a shareable state."
hypervisor,9141417,"Methods and systems for integrated storage and data management using a 
hypervisor","Methods and systems for integrated data management and block level storage management in a storage system having a controller with a multi-core processor. A 
hypervisor
 manages the multi-core processor such that at least one processor is used in a first virtual machine on which a block level storage management process is operable. The first virtual machine may also operate under the control of a real-time operating system. The 
hypervisor
 also defines a second virtual machine using one or more other processor cores and operates a data management application process optionally under control of a general purpose operating system. The optional general purpose operating system and the data management application process access storage devices by communicating through the 
hypervisor
 with the block level storage management process operable in the first virtual machine."
hypervisor,9141416,Virtualization congestion control framework for modifying execution of applications on virtual machine based on mass congestion indicator in host computing system,"Novel tools and techniques are provided for implementing a virtualization congestion control framework. In one aspect, a method might include a 
hypervisor
 assigning application resources of a virtual machine (""VM""), which operates on a host computing system, with maximum allowable settings to each software application to be executed on the VM. The 
hypervisor
 or an orchestrator might determine a running mode of the host computing system, and might execute the software application(s) using running mode attributes of the determined running mode. The 
hypervisor
 or the orchestrator might monitor application resource utilization, and, based on a determination that application resource utilization has changed, might modify allocation of application resources to each of the software application(s). In some cases, the 
hypervisor
 or the orchestrator might monitor for mass congestion indicators, and, based on a determination that a mass congestion indicator is present, might modify the running mode of the host computing system."
